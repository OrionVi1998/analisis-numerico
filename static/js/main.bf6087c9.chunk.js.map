{"version":3,"sources":["Pages/MetodosRomberg.js","Pages/HomePage.js","Components/Navbar.js","Components/TablaEjercicios.js","Pages/EjerciciosA.js","Pages/Biseccion.js","Components/LineChartPF.js","Components/useWindowSize.js","Pages/PuntoFijo.js","Components/LineChartNR.js","Pages/NewtonRaphson.js","Components/LineChartPoliRaphson.js","Pages/PolinomioLagrange.js","Pages/MetodosTrapecios.js","App.js","reportWebVitals.js","index.js"],"names":["range","start","end","length","Array","from","_","i","MetodoRomberg","props","useState","puntos","setPuntos","equacion","setEquacion","maxDepth","setMaxDepth","minPoint","setMinPoint","maxPoint","setMaxPoint","useEffect","Romberg","e","console","error","divided","columns","Row","Column","width","fluid","label","placeholder","value","onChange","disabled","min","max","Number","celled","Header","map","n","HeaderCell","Math","pow","Body","p","Cell","Trapecio","ecuacion","h","newPuntos","lastX","push","x","y","evaluate","replaceAll","getMin","d3","getMax","slice","join","profundidad","eq","resArray","log","k","eval","reverse","HomePage","Container","Navbar","Menu","inverted","style","height","name","link","Item","href","TablaEjercicios","ej","data","setData","ejercicio13","ejercicio14","ejercicio15","iter","va","res","exp","vv","Ea","abs","Er","nIter","iterRec","Table","EjerciciosA","setEj","pointing","secondary","ejercicio","onClick","active","Grid","textalign","Biseccion","rangoA","setRangoA","pi","rangoB","setRangoB","cotaError","scotaErrortE","numeroIteraciones","setNumeroIteraciones","valoresTabulador","setValoresTabulador","iteraciones","setIteraciones","inputTabulador","setInputTabulador","funcion","setFuncion","log2","ceil","Infinity","newIteraciones","fa","fb","middlePoint","fm","iterToPush","count","pointA","pointB","String","aa","falz","bb","fblz","rango","m","sign","rows","Segment","Form","Input","s","Group","Divider","Label","display","alignItems","justifyContent","Detail","textAlign","vx","fx","Button","icon","color","valor","f","newVals","undefined","find","v","tabular","colSpan","LineChartPF","reload","d3Chart","useRef","containerRef","margin","current","offsetWidth","svg","attr","append","xScale","domain","d","yScale","scaleLinear","call","line","datum","filter","removeChild","children","ref","id","useWindowSize","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","PuntoFijo","funcionX","setFuncionX","funcionG","setFuncionG","puntoA","setPuntoA","puntoB","setPuntoB","answer","setAnswer","xZero","setXZero","dataToSet","gx","dominio","valsFX","valsGX","valoresXY","answerXY","concat","Dropdown","selection","options","key","text","xa","xb","newIters","update","$push","LineChartNR","NewtonRaphson","funcionF","setFuncionF","funcionDF","setFuncionDF","funcionDDF","setFuncionDDF","funcionDDDF","setFuncionDDDF","fdf","derivative","toString","fddf","fdddf","formula","modulofx","valsDFX","valsDDFX","valsDDDFX","lastVal","a","b","defined","PolinomioLagrange","puntoX","setPuntoX","polinomial","setPolinomial","LS","setLS","px","setPX","puntosPolinomio","setPuntosPolinomio","contenedorL","stringTop","stringBottom","j","p2","simplify","coeficiente","l","valsPX","onSubmit","includes","type","tex","LineChartPoliRaphson","MetodosTrapecios","setN","setH","simple","compuesto","setRes","err","as","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf6087c9.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Grid, Input, Segment, Table} from \"semantic-ui-react\";\r\nimport {evaluate} from \"mathjs\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst range = (start, end, length = end - start + 1) =>\r\n  Array.from({length}, (_, i) => start + i)\r\n\r\nfunction MetodoRomberg(props) {\r\n\r\n  const [puntos, setPuntos] = useState([\r\n    [],\r\n    [],\r\n    [],\r\n    []\r\n  ]);\r\n\r\n  const [equacion, setEquacion] = useState('x^2+2x+5');\r\n  const [maxDepth, setMaxDepth] = useState(4);\r\n  const [minPoint, setMinPoint] = useState(1);\r\n  const [maxPoint, setMaxPoint] = useState(2);\r\n\r\n  useEffect(() => {\r\n    setPuntos(Romberg(maxDepth, minPoint, maxPoint, equacion))\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setPuntos(Romberg(maxDepth, minPoint, maxPoint, equacion))\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [equacion, maxDepth, maxPoint, minPoint])\r\n\r\n  return (\r\n    <div>\r\n      <Grid divided columns={'2'}>\r\n        <Grid.Row>\r\n          <Grid.Column width={'16'}>\r\n            <Segment fluid>\r\n              <Input\r\n                label={'Equation: f(x):'}\r\n                placeholder={'f(x)'}\r\n                value={equacion}\r\n                onChange={(e, {value}) => setEquacion(value)}\r\n              />\r\n              <Input\r\n                disabled={true}\r\n                min={'1'}\r\n                max={'8'}\r\n                label={`Profundidad: ${maxDepth}`}\r\n                placeholder={'max prfundidad'}\r\n                value={maxDepth}\r\n                onChange={(e, {value}) => setMaxDepth(Number(value * 2))}\r\n              />\r\n              <Input\r\n                label={'Minimo'}\r\n                placeholder={'X Minimo'}\r\n                value={minPoint}\r\n                onChange={(e, {value}) => setMinPoint(value)}\r\n              />\r\n              <Input\r\n                label={'Maximo'}\r\n                placeholder={'X Maximo'}\r\n                value={maxPoint}\r\n                onChange={(e, {value}) => setMaxPoint(value)}\r\n              />\r\n              <Table celled>\r\n                <Table.Header>\r\n                  {range(0, maxDepth - 1).map(n =>\r\n                    <Table.HeaderCell>\r\n                      n({Math.pow(2, n)})\r\n                    </Table.HeaderCell>\r\n                  )}\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                  {range(0, maxDepth - 1).map(n =>\r\n                    <Table.Row>\r\n                      {puntos[n].map(p => <Table.Cell>{p}</Table.Cell>)}\r\n                    </Table.Row>\r\n                  )}\r\n                </Table.Body>\r\n              </Table>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction Trapecio(minPoint, maxPoint, n, ecuacion) {\r\n  let h = (maxPoint - minPoint) / n\r\n\r\n\r\n  let newPuntos = [];\r\n  let lastX = minPoint;\r\n\r\n\r\n  newPuntos.push({\r\n    x: minPoint,\r\n    y: evaluate(ecuacion.replaceAll('x', `(${minPoint})`))\r\n  })\r\n\r\n  while (newPuntos.length !== n + 1) {\r\n    newPuntos.push({\r\n      x: lastX + h,\r\n      y: evaluate(ecuacion.replaceAll('x', `(${lastX + h})`))\r\n    })\r\n    lastX += h;\r\n  }\r\n\r\n  function getMin() {\r\n    return {x: d3.min(newPuntos, p => p.x), y: d3.min(newPuntos, p => p.y)}\r\n  }\r\n\r\n  function getMax() {\r\n    return {x: d3.max(newPuntos, p => p.x), y: d3.max(newPuntos, p => p.y)}\r\n  }\r\n\r\n  if (newPuntos.length === 2) {\r\n    return evaluate(`(${h}/2)*(${getMin().y} +  ${getMax().y})`)\r\n  } else {\r\n    return evaluate(`(${h}/2)*(${getMin().y} + 2*(${newPuntos.map(p => p.y).slice(1, newPuntos.length - 1).join(' + ')}) + ${getMax().y})`)\r\n  }\r\n}\r\n\r\n\r\nfunction Romberg(profundidad, minPoint, maxPoint, eq) {\r\n\r\n  let resArray = range(0, profundidad - 1).map(n => [])\r\n\r\n  range(0, profundidad - 1).map(n => {\r\n    resArray[n] = range(0, n)\r\n  })\r\n\r\n\r\n  resArray[resArray.length - 1] = range(0, profundidad - 1).map(n => {\r\n    return Trapecio(minPoint, maxPoint, Math.pow(2, n), eq)\r\n  })\r\n\r\n  console.log(resArray)\r\n\r\n  for (let i = resArray.length - 2; i !== -1; i--) {\r\n    console.log(resArray[i])\r\n\r\n    resArray[i] = resArray[i].map(n => {\r\n      console.log(`${resArray[i + 1][n]}, ${resArray[i + 1][n + 1]}`)\r\n      let k = profundidad - i;\r\n      // eslint-disable-next-line no-eval\r\n      return eval(`(((4 ^ (${k} - 1)) * (${resArray[i + 1][n + 1]})) - (${resArray[i + 1][n]})) / ((4 ^ (${k} - 1)) - 1)`)\r\n    })\r\n\r\n    console.log(resArray[i])\r\n\r\n  }\r\n\r\n  console.log(resArray)\r\n\r\n  return resArray.reverse()\r\n\r\n}\r\n\r\n\r\nexport default MetodoRomberg;\r\n","import React from 'react';\r\nimport {Container} from \"semantic-ui-react\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <Container>\r\n      This is my homepage\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nfunction Navbar(props) {\r\n\r\n  const items = [\r\n    {name: \"Home\", link: \"/\"},\r\n    {name: \"Ejercicios: 13, 14, 15\", link: \"/ejercicios_a\"},\r\n    {name:\"Biseccion\", link:\"/biseccion\"},\r\n    {name:\"Punto Fijo\", link: \"/punto_fijo\"},\r\n    {name:\"Newton Raphson\", link: \"/newton_raphson\"},\r\n    {name:\"Polinomio de Lagrange\", link: \"/polinomio_lagrange\"},\r\n    {name:\"Metodos de Los Trapecios\", link: \"/metodo_trapecios\"},\r\n    {name:\"Metodo de Romberg\", link: \"/metodo_romberg\"}\r\n  ]\r\n\r\n  return (\r\n    <Menu inverted style={{height: '5%'}}>\r\n      {\r\n        items.map(i =>\r\n          <Menu.Item\r\n            name={i.name}\r\n            href={i.link}\r\n          >\r\n            {i.name}\r\n          </Menu.Item>\r\n        )\r\n      }\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Table} from \"semantic-ui-react\";\r\n\r\nfunction TablaEjercicios({ej}) {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    if (ej === 13) {\r\n      setData(ejercicio13(30))\r\n    }\r\n    if (ej === 14) {\r\n      setData(ejercicio14(30))\r\n    }\r\n    if (ej === 15) {\r\n      setData(ejercicio15(25))\r\n    }\r\n\r\n  }, [ej])\r\n\r\n  const ejercicio13 = (iter) => {\r\n    let res = [];\r\n    let h;\r\n    let va;\r\n    /*{i, h, VV, VA, EA, ER}*/\r\n    while (iter !== 0) {\r\n      h = Math.pow(2, -iter)\r\n      va = (Math.exp(h) - Math.exp(0)) / h\r\n\r\n      res.push(\r\n        {\r\n          i: iter,\r\n          h: h,\r\n          vv: Math.exp(0),\r\n          va: va,\r\n          Ea: Math.abs((va - Math.exp(0))),\r\n          Er: Math.abs((va - Math.exp(0))) / Math.exp(0)\r\n        }\r\n      );\r\n      iter -= 1\r\n    }\r\n    return res.reverse();\r\n  }\r\n\r\n  const ejercicio14 = (iter) => {\r\n    let res = [];\r\n    let h;\r\n    let va;\r\n    /*{i, h, VV, VA, EA, ER}*/\r\n    while (iter !== 0) {\r\n      h = Math.pow(2, -iter)\r\n      va = (Math.exp(h) - Math.exp(-h)) / (2 * h)\r\n\r\n      res.push(\r\n        {\r\n          i: iter,\r\n          h: h,\r\n          vv: Math.exp(0),\r\n          va: va,\r\n          Ea: Math.abs((va - Math.exp(0))),\r\n          Er: Math.abs((va - Math.exp(0))) / Math.exp(0)\r\n        }\r\n      );\r\n      iter -= 1\r\n    }\r\n    return res.reverse();\r\n  }\r\n\r\n  const ejercicio15 = (nIter) => {\r\n\r\n    let res = [];\r\n\r\n    const iterRec = (iter) => {\r\n      if (iter === 0) {\r\n        return Math.log(1.1);\r\n      } else {\r\n        return (1 / iter) - 10 * iterRec(iter - 1)\r\n      }\r\n    };\r\n\r\n    while (nIter !== 0) {\r\n      res.push(\r\n        {\r\n          i: nIter,\r\n          h: \"N/A\",\r\n          vv: iterRec(nIter),\r\n          va: \"N/A\",\r\n          Ea: \"N/A\",\r\n          Er: \"N/A\"\r\n        }\r\n      );\r\n      nIter -= 1\r\n    }\r\n\r\n    res.push({\r\n      i: 0,\r\n      h: \"N/A\",\r\n      vv: Math.log(1.1),\r\n      va: \"N/A\",\r\n      Ea: \"N/A\",\r\n      Er: \"N/A\"\r\n    })\r\n\r\n    return res.reverse();\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Table celled style={{width: '100%'}}>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>i</Table.HeaderCell>\r\n          <Table.HeaderCell>h</Table.HeaderCell>\r\n          <Table.HeaderCell>Valor Verdadero</Table.HeaderCell>\r\n          <Table.HeaderCell>Valor approx.</Table.HeaderCell>\r\n          <Table.HeaderCell>Error Absoluto</Table.HeaderCell>\r\n          <Table.HeaderCell>Error Relativo</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n\r\n      <Table.Body>\r\n        {data.map(iter =>\r\n          <Table.Row>\r\n            <Table.Cell>{iter.i}</Table.Cell>\r\n            <Table.Cell>{iter.h}</Table.Cell>\r\n            <Table.Cell>{iter.vv}</Table.Cell>\r\n            <Table.Cell>{iter.va}</Table.Cell>\r\n            <Table.Cell>{iter.Ea}</Table.Cell>\r\n            <Table.Cell>{iter.Er}</Table.Cell>\r\n          </Table.Row>\r\n        )}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default TablaEjercicios;\r\n","import React, {useState} from 'react';\r\nimport {Grid, Menu} from \"semantic-ui-react\";\r\nimport TablaEjercicios from \"../Components/TablaEjercicios\";\r\n\r\nfunction EjerciciosA(props) {\r\n\r\n  const [ej, setEj] = useState(13);\r\n  const ejercicios = [\r\n    {\r\n      name: \"Ejercicio 13\",\r\n      value: 13\r\n    },\r\n    {\r\n      name: \"Ejercicio 14\",\r\n      value: 14\r\n    },\r\n    {\r\n      name: \"Ejercicio 15\",\r\n      value: 15\r\n    }\r\n  ]\r\n  return (\r\n    <div>\r\n      <Menu pointing secondary style={{height:\"6%\"}}>\r\n        {\r\n          ejercicios.map(ejercicio =>\r\n            <Menu.Item\r\n              onClick={() => setEj(ejercicio.value)}\r\n              active={ejercicio.value === ej}\r\n            >\r\n              {ejercicio.name}\r\n            </Menu.Item>\r\n          )\r\n        }\r\n      </Menu>\r\n\r\n      <Grid style={{height: '89%', width: '100%'}} columns={1} textalign=\"center\" divided>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <TablaEjercicios ej={ej}/>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EjerciciosA;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Grid, Form, Segment, Divider, Label, Table, Button, Input} from \"semantic-ui-react\";\r\nimport {evaluate, pi} from \"mathjs\";\r\n\r\nconst Biseccion = () => {\r\n\r\n  const [rangoA, setRangoA] = useState(0);\r\n  const [rangoB, setRangoB] = useState(pi / 2);\r\n  const [cotaError, scotaErrortE] = useState(0.05);\r\n  const [numeroIteraciones, setNumeroIteraciones] = useState(0);\r\n  const [valoresTabulador, setValoresTabulador] = useState([]);\r\n  const [iteraciones, setIteraciones] = useState([]);\r\n  const [inputTabulador, setInputTabulador] = useState(\"\");\r\n  const [funcion, setFuncion] = useState(\"cos(x)-x\");\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let res;\r\n      res = -Math.log2((cotaError / (rangoB - rangoA)))\r\n      if (Math.ceil(res)!==-Infinity) {\r\n        setNumeroIteraciones(Math.ceil(res))\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }, [rangoA, rangoB, cotaError]);\r\n\r\n\r\n  useEffect(() => {\r\n    setValoresTabulador([])\r\n    try {\r\n      setIteraciones([])\r\n      let newIteraciones;\r\n      let count = 0;\r\n      let fa;\r\n      let fb;\r\n      let middlePoint;\r\n      let fm;\r\n      let pointA = rangoA;\r\n      let pointB = rangoB;\r\n      let iterToPush;\r\n\r\n      newIteraciones = []\r\n\r\n      while (count !== numeroIteraciones && numeroIteraciones <= 50) {\r\n        count += 1\r\n        middlePoint = (pointA + pointB) / 2;\r\n\r\n        fa = funcion.replaceAll(\"x\", `(${String(pointA)})`);\r\n        fa = evaluate(fa);\r\n        fb = funcion.replaceAll(\"x\", `(${String(pointB)})`);\r\n        fb = evaluate(fb);\r\n        fm = funcion.replaceAll(\"x\", `(${String(middlePoint)})`);\r\n        fm = evaluate(fm);\r\n\r\n        iterToPush = {\r\n          i: count,\r\n          aa: pointA,\r\n          fa: fa,\r\n          falz: String((fa * fm) < 0),\r\n          bb: pointB,\r\n          fb: fb,\r\n          fblz: String((fb * fm) < 0),\r\n          rango: `[${pointA}, ${pointB}]`,\r\n          m: middlePoint,\r\n          fm: fm\r\n        };\r\n\r\n        if (Math.sign((iterToPush.fa)) === Math.sign(iterToPush.fm)) {\r\n          pointA = middlePoint;\r\n          pointB = iterToPush.bb;\r\n        } else {\r\n          pointA = iterToPush.aa;\r\n          pointB = middlePoint;\r\n        }\r\n\r\n        newIteraciones.push(iterToPush)\r\n\r\n      }\r\n      setIteraciones(newIteraciones)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }, [funcion, rangoA, rangoB, numeroIteraciones]);\r\n\r\n  const tabular = (valor) => {\r\n    try {\r\n      let f;\r\n      f = funcion.replaceAll(\"x\", `(${valor})`);\r\n      f = evaluate(f);\r\n      let newVals = valoresTabulador;\r\n      if (newVals.find((v) => v.x === valor) === undefined && funcion !== \"\") {\r\n        newVals.push({x: valor, fx: f})\r\n        setValoresTabulador(newVals)\r\n        setInputTabulador(\"\")\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <Grid rows={\"2\"} columns={\"2\"} divided>\r\n      <Grid.Row>\r\n        <Grid.Column style={{width: \"100vw\"}}>\r\n          <Segment>\r\n            <Form>\r\n              <label>Funcion</label>\r\n              <Form.Input\r\n                placeholder={\"Funcion\"}\r\n                name={\"funcion\"}\r\n                value={funcion}\r\n                onChange={(e, s) => setFuncion(s.value)}\r\n              />\r\n              <label>Rango</label>\r\n              <Form.Group>\r\n                <Form.Input\r\n                  placeholder=\"a\"\r\n                  name={\"a\"}\r\n                  value={rangoA}\r\n                  onChange={(e, s) => setRangoA(s.value)}\r\n                />\r\n                <Form.Input\r\n                  placeholder=\"b\"\r\n                  name=\"b\"\r\n                  value={rangoB}\r\n                  onChange={(e, s) => setRangoB(s.value)}\r\n                />\r\n              </Form.Group>\r\n              <Divider/>\r\n              <label>\r\n                Error:\r\n                <br/>\r\n                (b - a) * 2^(-k) &lt;= error\r\n                <br/>\r\n                k &gt;= -log2(e / (b - a))\r\n              </label>\r\n\r\n              <Form.Group>\r\n                <Form.Input\r\n                  placeholder={\"Error\"}\r\n                  name={\"e\"}\r\n                  value={cotaError}\r\n                  onChange={(e, s) => scotaErrortE(s.value)}\r\n                />\r\n                <Label style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n                  Iteraciones a Realizar\r\n                  <Label.Detail>\r\n                    {numeroIteraciones}\r\n                  </Label.Detail>\r\n                </Label>\r\n              </Form.Group>\r\n            </Form>\r\n            <Divider/>\r\n            <Table celled textAlign={\"center\"}>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell> X </Table.HeaderCell>\r\n                  <Table.HeaderCell> f(x) </Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              {/*CELLS already Found*/}\r\n              <Table.Body>\r\n                {valoresTabulador.map(vx =>\r\n                  <Table.Row>\r\n                    <Table.Cell>{vx.x}</Table.Cell>\r\n                    <Table.Cell>{vx.fx}</Table.Cell>\r\n                  </Table.Row>\r\n                )}\r\n                <Table.Row>\r\n                  {/*Tabulator Button*/}\r\n                  <Table.Cell>\r\n                    <Input\r\n                      placeholder={\"Valor de X\"}\r\n                      value={inputTabulador}\r\n                      onChange={(e, s) => setInputTabulador(s.value)}\r\n                    />\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    <Button\r\n                      icon={\"plus\"}\r\n                      color={\"green\"}\r\n                      onClick={() => {\r\n                        tabular(inputTabulador)\r\n                      }}\r\n                    />\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            </Table>\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n        {/*  TODO: Plot of function | Rules that need to be verified */}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Segment style={{width: \"100vw\"}}>\r\n          <Table celled textAlign={\"center\"}>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell> i </Table.HeaderCell>\r\n                <Table.HeaderCell> a </Table.HeaderCell>\r\n                <Table.HeaderCell> f(a) </Table.HeaderCell>\r\n                <Table.HeaderCell> f(a)&lt;0 </Table.HeaderCell>\r\n                <Table.HeaderCell> b </Table.HeaderCell>\r\n                <Table.HeaderCell> f(b) </Table.HeaderCell>\r\n                <Table.HeaderCell> f(b)&lt;0 </Table.HeaderCell>\r\n                <Table.HeaderCell> m </Table.HeaderCell>\r\n                <Table.HeaderCell> f(m) </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              {iteraciones.map(i =>\r\n                <Table.Row>\r\n                  <Table.Cell>{i.i}</Table.Cell>\r\n                  <Table.Cell active>{i.aa}</Table.Cell>\r\n                  <Table.Cell>{i.fa}</Table.Cell>\r\n                  <Table.Cell>{i.falz}</Table.Cell>\r\n                  <Table.Cell active>{i.bb}</Table.Cell>\r\n                  <Table.Cell>{i.fb}</Table.Cell>\r\n                  <Table.Cell>{i.fblz}</Table.Cell>\r\n                  <Table.Cell active>{i.m}</Table.Cell>\r\n                  <Table.Cell>{i.fm}</Table.Cell>\r\n                </Table.Row>\r\n              )}\r\n              <Table.Row>\r\n                <Table.Cell colSpan={\"10\"}>\r\n                  <Button\r\n                    icon={\"plus\"}\r\n                    color={\"green\"}\r\n                    onClick={() => setNumeroIteraciones(numeroIteraciones+1)}\r\n                  />\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n        </Segment>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Biseccion;\r\n","import React, {useEffect, useRef} from 'react';\r\nimport * as d3 from \"d3\";\r\nimport {scaleLinear} from \"d3\";\r\n\r\nconst LineChartPF = ({data, reload}) => {\r\n\r\n  const d3Chart = useRef();\r\n  const containerRef = useRef();\r\n\r\n  useEffect(() => {\r\n\r\n    const margin = {top:50, bottom:30, right:30, left:30};\r\n    const width = (containerRef.current ? containerRef.current.offsetWidth : 500) - 65;\r\n    const height = 500;\r\n\r\n    const svg = d3.select(d3Chart.current)\r\n    .attr(\"width\", width+margin.left+margin.right)\r\n    .attr(\"height\", height+margin.top+margin.bottom)\r\n    .style(\"background-color\",\"lightgrey\")\r\n    .append(\"g\")\r\n    .attr(\"transform\", `translate(${margin.left},${margin.right})`);\r\n\r\n    const xScale = d3.scaleLinear()\r\n    .domain(d3.extent(data, d => d.x))\r\n    .range([0, width])\r\n\r\n    const yScale = scaleLinear()\r\n    .domain(d3.extent(data, d => d.x))\r\n    .range([height, 0])\r\n\r\n    svg.append(\"g\")\r\n    .attr(\"transform\", `translate(0, ${height})`)\r\n    .call(d3.axisBottom(xScale))\r\n\r\n    svg.append(\"g\")\r\n    .call(d3.axisLeft(yScale))\r\n\r\n    let line = d3.line()\r\n    .x(d => xScale(d.x))\r\n    .y(d => yScale(d.y))\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"xy\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"green\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"fx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"red\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"gx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"blue\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"answerXY\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"blue\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    return () => {\r\n      try {\r\n        d3Chart.current.removeChild(d3Chart.current.children[0])\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  },[data, reload]);\r\n\r\n  return (\r\n    <div ref={containerRef} id={\"d3LineChartPF\"}>\r\n      <svg ref={d3Chart}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChartPF;\r\n","import {useLayoutEffect, useState} from \"react\";\r\n\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nexport default useWindowSize;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Form, Grid, Table, Segment, Dropdown, Button, Label} from \"semantic-ui-react\";\r\nimport LineChartPF from \"../Components/LineChartPF\";\r\nimport {evaluate} from \"mathjs\";\r\nimport * as d3 from \"d3\";\r\nimport update from \"immutability-helper\";\r\nimport useWindowSize from \"../Components/useWindowSize\";\r\n\r\n\r\nconst PuntoFijo = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [funcionX, setFuncionX] = useState(\"(x^2)-(3*x)-(1)\");\r\n  const [funcionG, setFuncionG] = useState(\"((x^2)-1)/3\");\r\n  const [puntoA, setPuntoA] = useState(-1);\r\n  const [puntoB, setPuntoB] = useState(0);\r\n  const [answer, setAnswer] = useState(0);\r\n  const [xZero, setXZero] = useState(puntoB);\r\n  const [iteraciones, setIteraciones] = useState([]);\r\n  const [width, height] = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let dataToSet = [];\r\n      if (answer === 0) {\r\n        setIteraciones([{\r\n          i: 0,\r\n          x: xZero,\r\n          gx: evaluate(funcionG.replaceAll(\"x\", `(${xZero})`))\r\n        }])\r\n      }\r\n\r\n      let dominio = d3.range(puntoA, puntoB, 0.05)\r\n      let valsFX = dominio.map(x => (\r\n        {funcion: \"fx\", x: Number(x), y: evaluate(funcionX.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n      let valsGX = dominio.map(x => (\r\n        {funcion: \"gx\", x: Number(x), y: evaluate(funcionG.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n      let valoresXY = dominio.map(x => (\r\n        {funcion: \"xy\", x: Number(x), y: Number(x)}\r\n      ))\r\n      let answerXY = dominio.map(x => (\r\n        {funcion: \"answerXY\", x: Number(answer), y: Number(x)}\r\n      ))\r\n\r\n      dataToSet = dataToSet.concat(valsFX).concat(valsGX).concat(valoresXY).concat(answerXY)\r\n      setData(dataToSet)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }, [funcionX, funcionG, puntoA, puntoB, answer, xZero]);\r\n\r\n\r\n  return (\r\n    <Grid rows={\"2\"} columns={\"2\"} divided>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form>\r\n              <Label\r\n                color=\"red\"\r\n              >\r\n                F(x)\r\n              </Label>\r\n              <Form.Input\r\n                placeholder={\"F(x) (Rojo)\"}\r\n                value={funcionX}\r\n                onChange={(e, s) => setFuncionX(s.value)}\r\n              />\r\n\r\n              <Label\r\n              color={\"blue\"}\r\n              >\r\n                G(x)\r\n              </Label>\r\n              <Form.Input\r\n                placeholder={\"G(x) (Azul)\"}\r\n                value={funcionG}\r\n                onChange={(e, s) => setFuncionG(s.value)}\r\n              />\r\n\r\n              <Form.Group>\r\n                <Label>Rango A - B :</Label>\r\n                <Form.Input\r\n                  placeholder={\"a\"}\r\n                  value={puntoA}\r\n                  onChange={(e, s) => setPuntoA(s.value)}\r\n                />\r\n                <Form.Input\r\n                  placeholder={\"b\"}\r\n                  value={puntoB}\r\n                  onChange={(e, s) => setPuntoB(s.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Label>\r\n                X0\r\n              </Label>\r\n              <br/>\r\n              <Dropdown\r\n                placeholder={\"x0\"}\r\n                selection\r\n                options={[{key: \"a\", value: puntoA, text: `a = ${puntoA}`}, {\r\n                  key: \"b\",\r\n                  value: puntoB,\r\n                  text: `b = ${puntoB}`\r\n                }]}\r\n                value={xZero}\r\n                onChange={(e, s) => {\r\n                  setIteraciones([{i: 0, x: xZero, gx: evaluate(funcionG.replaceAll(\"x\", `(${xZero})`))}])\r\n                  setXZero(s.value)\r\n                }}\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <LineChartPF  reload={{width, height}} data={data} rango={{xa: puntoA, xb: puntoB}}/>\r\n          </Segment>\r\n        </Grid.Column>\r\n\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column width={\"16\"}>\r\n          <Segment>\r\n            <Table celled textAlign={\"center\"}>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>\r\n                    i\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>\r\n                    x\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>\r\n                    g(x)\r\n                  </Table.HeaderCell>\r\n                </Table.Row>\r\n\r\n              </Table.Header>\r\n              <Table.Body>\r\n\r\n                {iteraciones.map(i =>\r\n                  <Table.Row>\r\n                    <Table.Cell>{i.i}</Table.Cell>\r\n                    <Table.Cell>{i.x}</Table.Cell>\r\n                    <Table.Cell>{i.gx}</Table.Cell>\r\n                  </Table.Row>\r\n                )}\r\n                <Table.Row>\r\n                  <Table.Cell colSpan={\"3\"}>\r\n                    <Button\r\n                      icon={\"plus\"}\r\n                      color={\"green\"}\r\n                      onClick={() => {\r\n                        try {\r\n                          const newIters = update(iteraciones, {$push:[{\r\n                              i: iteraciones[iteraciones.length - 1].i+1,\r\n                              x: iteraciones[iteraciones.length - 1].gx,\r\n                              gx: evaluate(funcionG.replaceAll(\"x\", `(${iteraciones[iteraciones.length - 1].gx})`))\r\n                            }]});\r\n                          setAnswer(evaluate(funcionG.replaceAll(\"x\", `(${newIters[newIters.length - 1].gx})`)))\r\n                          setIteraciones(newIters)\r\n                        } catch (error) {\r\n                          console.log(error)\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            </Table>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PuntoFijo;\r\n","import React, {useEffect, useRef} from 'react';\r\nimport * as d3 from \"d3\";\r\nimport {scaleLinear} from \"d3\";\r\n\r\nconst LineChartNR = ({data, reload}) => {\r\n\r\n  const d3Chart = useRef();\r\n  const containerRef = useRef();\r\n\r\n  useEffect(() => {\r\n\r\n    const margin = {top:50, bottom:30, right:30, left:30};\r\n    const width = (containerRef.current ? containerRef.current.offsetWidth : 500) - 75;\r\n    const height = 500;\r\n\r\n    const svg = d3.select(d3Chart.current)\r\n    .attr(\"width\", width+margin.left+margin.right)\r\n    .attr(\"height\", height+margin.top+margin.bottom)\r\n    .style(\"background-color\",\"lightgrey\")\r\n    .append(\"g\")\r\n    .attr(\"transform\", `translate(${margin.left},${margin.right})`);\r\n\r\n    const xScale = d3.scaleLinear()\r\n    .domain(d3.extent(data, d => d.x))\r\n    .range([0, width])\r\n\r\n    const yScale = scaleLinear()\r\n    .domain(d3.extent(data, d => d.y))\r\n    .range([height, 0])\r\n\r\n    svg.append(\"g\")\r\n    .attr(\"transform\", `translate(0, ${height})`)\r\n    .call(d3.axisBottom(xScale))\r\n\r\n    svg.append(\"g\")\r\n    .call(d3.axisLeft(yScale))\r\n\r\n    let line = d3.line()\r\n    .x(d => xScale(d.x))\r\n    .y(d => yScale(d.y))\r\n\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"fx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"green\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"fdx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"red\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"fddx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"blue\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"fdddx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"orange\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    return () => {\r\n      try {\r\n        d3Chart.current.removeChild(d3Chart.current.children[0])\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  },[data, reload]);\r\n\r\n  return (\r\n    <div ref={containerRef} id={\"d3LineChartNR\"}>\r\n      <svg ref={d3Chart}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChartNR;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Button, Dropdown, Form, Grid, Label, Segment, Table} from \"semantic-ui-react\";\r\nimport {derivative, evaluate, pi} from \"mathjs\";\r\nimport LineChartNR from \"../Components/LineChartNR\";\r\nimport update from \"immutability-helper\";\r\nimport * as d3 from \"d3\";\r\nimport useWindowSize from \"../Components/useWindowSize\";\r\n\r\nconst NewtonRaphson = () => {\r\n\r\n  const [puntoA, setPuntoA] = useState(0);\r\n  const [puntoB, setPuntoB] = useState(pi / 2);\r\n  const [funcionF, setFuncionF] = useState(\"cos(x)-x\");\r\n  const [funcionDF, setFuncionDF] = useState(\"-(sin(x) + 1)\");\r\n  const [funcionDDF, setFuncionDDF] = useState(\"-cos(x)\");\r\n  const [funcionDDDF, setFuncionDDDF] = useState(\"sin(x)\");\r\n  const [data, setData] = useState([]);\r\n  const [xZero, setXZero] = useState(puntoB);\r\n  const [iteraciones, setIteraciones] = useState([]);\r\n  const [width, height] = useWindowSize();\r\n\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let fdf = derivative(funcionF, \"x\").toString();\r\n      let fddf = derivative(fdf, \"x\").toString();\r\n      let fdddf = derivative(fddf, \"x\").toString();\r\n      setFuncionDF(fdf);\r\n      setFuncionDDF(fddf);\r\n      setFuncionDDDF(fdddf);\r\n\r\n      setIteraciones([{\r\n        i:1,\r\n        x: xZero,\r\n        formula: evaluate(\r\n          \"x-((a)/(b))\"\r\n          .replaceAll(\"a\", funcionF)\r\n          .replaceAll(\"b\", fdf)\r\n          .replaceAll(\"x\", `(${xZero})`)\r\n        ),\r\n        modulofx:Math.abs(evaluate(funcionF.replaceAll(\"x\", `(${xZero})`)))\r\n      }])\r\n\r\n      let dataToSet = [];\r\n\r\n      let dominio = d3.range(puntoA, puntoB, 0.05)\r\n      let valsFX = dominio.map(x => (\r\n        {funcion: \"fx\", x: Number(x), y: evaluate(funcionF.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n      let valsDFX = dominio.map(x => (\r\n        {funcion: \"fdx\", x: Number(x), y: evaluate(funcionDF.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n      let valsDDFX = dominio.map(x => (\r\n        {funcion: \"fddx\", x: Number(x), y: evaluate(funcionDDF.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n      let valsDDDFX = dominio.map(x => (\r\n        {funcion: \"fdddx\", x: Number(x), y: evaluate(funcionDDDF.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n\r\n      dataToSet = dataToSet.concat(valsFX).concat(valsDFX).concat(valsDDFX).concat(valsDDDFX)\r\n      setData(dataToSet)\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }, [funcionF, puntoA, puntoB, xZero])\r\n\r\n  return (\r\n    <Grid rows={\"2\"} columns={\"2\"} divided>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form>\r\n              <Label\r\n                color={\"green\"}>\r\n                F(x)\r\n              </Label>\r\n              <Form.Input\r\n                placeholder={\"f(x)\"}\r\n                value={funcionF}\r\n                onChange={(e, s) => setFuncionF(s.value)}\r\n              />\r\n              <Label\r\n                color={\"red\"}\r\n                pointing={\"bottom\"}>\r\n                F'(x) = {funcionDF}\r\n              </Label>\r\n              <Label\r\n                color={\"blue\"}\r\n              >\r\n                F''(x) = {funcionDDF}\r\n              </Label>\r\n              <Label\r\n                color={\"orange\"}\r\n              >\r\n                F''(x) = {funcionDDDF}\r\n              </Label>\r\n              <br/>\r\n              <br/>\r\n              <Form.Group>\r\n                <Label>Rango A - B: </Label>\r\n                <Form.Input\r\n                  placeholder={\"punto a\"}\r\n                  value={puntoA}\r\n                  onChange={(e, s) => setPuntoA(s.value)}\r\n                />\r\n                <Form.Input\r\n                  placeholder={\"punto b\"}\r\n                  value={puntoB}\r\n                  onChange={(e, s) => setPuntoB(s.value)}\r\n                />\r\n              </Form.Group>\r\n              <Label>X0: </Label>\r\n              <Dropdown\r\n                placeholder={\"x0\"}\r\n                selection\r\n                options={[{key: \"a\", value: puntoA, text: `a = ${puntoA}`}, {\r\n                  key: \"b\",\r\n                  value: puntoB,\r\n                  text: `b = ${puntoB}`\r\n                }]}\r\n                value={xZero}\r\n                onChange={(e, s) => {\r\n                  setXZero(s.value)\r\n                }}\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <LineChartNR reload={{width, height}} data={data}/>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column width={\"16\"}>\r\n          <Segment>\r\n            <Table celled textAlign={\"center\"}>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>\r\n                    i\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>\r\n                    x\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>\r\n                    x = x-f/f'\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>\r\n                    | f(x) |\r\n                  </Table.HeaderCell>\r\n                </Table.Row>\r\n\r\n              </Table.Header>\r\n              <Table.Body>\r\n\r\n                {iteraciones.map(i =>\r\n                  <Table.Row>\r\n                    <Table.Cell>{i.i}</Table.Cell>\r\n                    <Table.Cell>{i.x}</Table.Cell>\r\n                    <Table.Cell>{i.formula}</Table.Cell>\r\n                    <Table.Cell>{i.modulofx}</Table.Cell>\r\n                  </Table.Row>\r\n\r\n                )}\r\n                <Table.Row>\r\n                  <Table.Cell colSpan={\"4\"}>\r\n                    <Button\r\n                      icon={\"plus\"}\r\n                      color={\"green\"}\r\n                      onClick={() => {\r\n                        try {\r\n\r\n                          const lastVal = iteraciones[iteraciones.length-1];\r\n                          const newIters = update(iteraciones, {$push:[\r\n                              {\r\n                                i: lastVal.i+1,\r\n                                x: lastVal.formula,\r\n                                formula: evaluate(\r\n                                  \"x-((a)/(b))\"\r\n                                  .replaceAll(\"a\", funcionF)\r\n                                  .replaceAll(\"b\", funcionDF)\r\n                                  .replaceAll(\"x\", `(${lastVal.formula})`)\r\n                                ),\r\n                                modulofx:Math.abs(evaluate(funcionF.replaceAll(\"x\", `(${lastVal.x})`)))\r\n                              }\r\n                            ]})\r\n\r\n                          setIteraciones(newIters)\r\n                        } catch (error) {\r\n                          console.log(error)\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            </Table>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewtonRaphson;\r\n","import React, {useEffect, useRef} from 'react';\r\nimport * as d3 from \"d3\";\r\nimport {scaleLinear} from \"d3\";\r\n\r\nconst LineChartPF = ({data, a, b, reload}) => {\r\n\r\n  const d3Chart = useRef()\r\n  const containerRef = useRef();\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const margin = {top:50, bottom:30, right:30, left:30}\r\n    const width = (containerRef.current ? containerRef.current.offsetWidth : 500) - 65\r\n    const height = 500\r\n\r\n    const svg = d3.select(d3Chart.current)\r\n    .attr(\"width\", width+margin.left+margin.right)\r\n    .attr(\"height\", height+margin.top+margin.bottom)\r\n    .style(\"background-color\",\"lightgrey\")\r\n    .append(\"g\")\r\n    .attr(\"transform\", `translate(${margin.left},${margin.right})`);\r\n\r\n    const xScale = d3.scaleLinear()\r\n    .domain([a, b])\r\n    .range([0, width])\r\n\r\n    const yScale = scaleLinear()\r\n    .domain([a, b])\r\n    .range([height, 0])\r\n\r\n    svg.append(\"g\")\r\n    .attr(\"transform\", `translate(0, ${height})`)\r\n    .call(d3.axisBottom(xScale))\r\n\r\n    svg.append(\"g\")\r\n    .call(d3.axisLeft(yScale))\r\n\r\n    let line = d3.line()\r\n    .x(d => xScale(d.x))\r\n    .y(d => yScale(d.y))\r\n    .defined(d => d.y !== Infinity)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"fx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"green\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"px\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"red\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n\r\n    return () => {\r\n      try {\r\n        d3Chart.current.removeChild(d3Chart.current.children[0])\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  },[a, b, data, reload]);\r\n\r\n  return (\r\n    <div ref={containerRef} id={\"d3LineChartPF\"}>\r\n      <svg ref={d3Chart}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChartPF;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Form, Grid, Label, Segment, Table} from \"semantic-ui-react\";\r\nimport update from \"immutability-helper\";\r\nimport {evaluate, simplify} from \"mathjs\";\r\nimport {MathComponent} from \"mathjax-react\";\r\nimport * as d3 from \"d3\";\r\nimport LineChartPoliRaphson from \"../Components/LineChartPoliRaphson\";\r\nimport useWindowSize from \"../Components/useWindowSize\";\r\n\r\n\r\nconst PolinomioLagrange = () => {\r\n\r\n  const [funcion, setFuncion] = useState(\"1/x\");\r\n  const [puntos, setPuntos] = useState([\r\n    {x: \"1\", fx: \"1\"}, {x: \"-1\", fx: \"-1\"}, {x: \"2\", fx: \"0.5\"}\r\n  ]);\r\n  const [puntoX, setPuntoX] = useState(\"\");\r\n  const [polinomial, setPolinomial] = useState(\"\");\r\n  const [LS, setLS] = useState([]);\r\n  const [px, setPX] = useState([]);\r\n  const [puntosPolinomio, setPuntosPolinomio] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [puntoA, setPuntoA] = useState(\"\");\r\n  const [puntoB, setPuntoB] = useState(\"\");\r\n  const [width, height] = useWindowSize();\r\n\r\n  useEffect(() => {\r\n\r\n    let contenedorL = [];\r\n    setPuntosPolinomio([])\r\n\r\n    for (let i = 0; i < puntos.length; i++) {\r\n      let p = puntos[i];\r\n      let stringTop = \"\";\r\n      let stringBottom = \"\";\r\n\r\n      for (let j = 0; j < puntos.length; j++) {\r\n        if (j !== i) {\r\n          let p2 = puntos[j]\r\n          stringTop += `((x)-(${p2.x}))`\r\n          stringBottom += `((${p.x})-(${p2.x}))`\r\n        }\r\n      }\r\n\r\n      contenedorL.push({\r\n        id: `L${i}`,\r\n        formula: `(${simplify(stringTop).toString()}/${evaluate(stringBottom)})`,\r\n        coeficiente: `(${p.fx})`\r\n      })\r\n    }\r\n\r\n    setLS(contenedorL)\r\n    setPolinomial(contenedorL.map(l => `(${l.formula}*${l.coeficiente})`).join(\"+\"))\r\n\r\n    let dataToSet = [];\r\n    setPuntoA(Number(d3.min(puntos, p => Number(p.x)))-1)\r\n    setPuntoB(Number(d3.max(puntos, p => Number(p.x)))+1)\r\n\r\n    let dominio = d3.range(puntoA, puntoB, 0.1)\r\n    let valsFX = dominio.map(x => (\r\n      {funcion: \"fx\", x: Number(x), y: evaluate(funcion.replaceAll(\"x\", `(${x})`))}\r\n    ))\r\n    let valsPX = dominio.map(x => (\r\n      {funcion: \"px\", x: Number(x), y: evaluate(polinomial.replaceAll(\"x\", `(${x})`))}\r\n    ))\r\n\r\n    dataToSet = dataToSet.concat(valsFX).concat(valsPX)\r\n    setData(dataToSet)\r\n\r\n  }, [puntos, funcion, polinomial])\r\n\r\n  return (\r\n    <Grid rows={\"2\"} columns={\"2\"} divided>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form>\r\n              <Label\r\n                color=\"green\"\r\n              >\r\n                F(x)\r\n              </Label>\r\n              <Form.Input\r\n                placeholder={\"F(x)\"}\r\n                value={funcion}\r\n                onChange={(e, s) => {\r\n                  setPuntos([])\r\n                  setFuncion(s.value)\r\n                }}\r\n              />\r\n            </Form>\r\n            <br/>\r\n            <Table textAlign={\"center\"} celled>\r\n              <Table.Header>\r\n                <Table.HeaderCell>x</Table.HeaderCell>\r\n                <Table.HeaderCell>f(x)</Table.HeaderCell>\r\n              </Table.Header>\r\n\r\n              <Table.Body>\r\n\r\n                {puntos.map(p =>\r\n                  <Table.Row>\r\n                    <Table.Cell>{p.x}</Table.Cell>\r\n                    <Table.Cell>{p.fx}</Table.Cell>\r\n                  </Table.Row>\r\n                )}\r\n\r\n                <Table.Row>\r\n                  <Table.Cell colSpan={\"2\"}>\r\n                    <Form\r\n                      onSubmit={() => {\r\n                        try {\r\n                          if (!puntos.map(p => p.x).includes(puntoX)) {\r\n                            setPuntos(update(puntos, {\r\n                              $push: [\r\n                                {\r\n                                  x: puntoX,\r\n                                  fx: evaluate(funcion.replaceAll(\"x\", `(${puntoX})`))\r\n                                }\r\n                              ]\r\n                            }))\r\n                          }\r\n                          setPuntoX(\"\")\r\n                        } catch (error) {\r\n                          console.log(error)\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Form.Group>\r\n                        <Form.Input\r\n                          name={\"x\"}\r\n                          placeholder={\"x\"}\r\n                          value={puntoX}\r\n                          onChange={(e, s) => setPuntoX(s.value)}\r\n                        />\r\n                        <Form.Button\r\n                          icon={\"plus\"}\r\n                          color={\"green\"}\r\n                          type={\"submit\"}\r\n                        />\r\n                      </Form.Group>\r\n                    </Form>\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n\r\n              </Table.Body>\r\n            </Table>\r\n          </Segment>\r\n\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment>\r\n              <MathComponent tex={`P(x) = `+polinomial}/>\r\n          </Segment>\r\n          <Segment>\r\n            <LineChartPoliRaphson\r\n              reload={{width, height}}\r\n              data={data}\r\n              a={puntoA}\r\n              b={puntoB}\r\n            />\r\n          </Segment>\r\n          <Table textAlign={\"center\"} celled>\r\n            <Table.Header>\r\n              <Table.HeaderCell>Ln</Table.HeaderCell>\r\n              <Table.HeaderCell>Formula</Table.HeaderCell>\r\n              <Table.HeaderCell>Coeficiente</Table.HeaderCell>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              {LS.map(l =>\r\n                <Table.Row>\r\n                  <Table.Cell>{l.id}</Table.Cell>\r\n                  <Table.Cell>\r\n                    <MathComponent tex={l.formula}/>\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    {l.coeficiente}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              )}\r\n            </Table.Body>\r\n          </Table>\r\n\r\n          <Table celled textAlign={\"center\"}>\r\n            <Table.Header>\r\n              <Table.HeaderCell>x</Table.HeaderCell>\r\n              <Table.HeaderCell>P(x)</Table.HeaderCell>\r\n            </Table.Header>\r\n            <Table.Body>\r\n\r\n              {puntosPolinomio.map(p =>\r\n                <Table.Row>\r\n                  <Table.Cell>{p.x}</Table.Cell>\r\n                  <Table.Cell>{p.px}</Table.Cell>\r\n                </Table.Row>\r\n              )}\r\n\r\n              <Table.Row>\r\n                <Table.Cell colSpan={\"2\"}>\r\n                  <Form\r\n                    onSubmit={() => {\r\n                      try {\r\n                        if (!puntosPolinomio.map(p => p.x).includes(px)) {\r\n                          setPuntosPolinomio(update(puntosPolinomio, {\r\n                            $push: [\r\n                              {\r\n                                x: px,\r\n                                px: evaluate(polinomial.replaceAll(\"x\", `(${px})`))\r\n                              }\r\n                            ]\r\n                          }))\r\n                        }\r\n                        setPX(\"\")\r\n                      } catch (error) {\r\n                        console.log(error)\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Form.Group>\r\n                      <Form.Input\r\n                        name={\"px\"}\r\n                        placeholder={\"x\"}\r\n                        value={px}\r\n                        onChange={(e, s) => setPX(s.value)}\r\n                      />\r\n                      <Form.Button\r\n                        icon={\"plus\"}\r\n                        color={\"green\"}\r\n                        type={\"submit\"}\r\n                      />\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n);\r\n};\r\n\r\nexport default PolinomioLagrange;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Grid, Header, Input, Label, Loader, Segment, Table} from \"semantic-ui-react\";\r\nimport {MathComponent} from \"mathjax-react\";\r\nimport {evaluate} from \"mathjs\";\r\nimport * as d3 from \"d3\";\r\n\r\n\r\nfunction MetodosTrapecios(props) {\r\n\r\n  const [puntos, setPuntos] = useState([\r\n    {x: 1, y: 8},\r\n    {x: 1.25, y: 9.1},\r\n    {x: 1.5, y: 10.25},\r\n    {x: 1.75, y: 11.56},\r\n    {x: 2, y: 13}\r\n  ]);\r\n\r\n  const [equacion, setEquacion] = useState('x^2+2x+5');\r\n  const [n, setN] = useState(4);\r\n  const [h, setH] = useState(0.25);\r\n  const [minPoint, setMinPoint] = useState(1)\r\n  const [maxPoint, setMaxPoint] = useState(2);\r\n\r\n  const [res, setRes] = useState({simple: \"Na\", compuesto: \"Na\"});\r\n\r\n  useEffect(() => {\r\n    setRes(\r\n      {\r\n        simple: evaluate(`((${getMax().x} - ${getMin().x})*(${getMin().y}+${getMax().y}))/2`),\r\n        compuesto: evaluate(`(${h}/2)*(${getMin().y} + 2*(${puntos.map(p => p.y).slice(1, puntos.length - 1).join(' + ')}) + ${getMax().y})`)\r\n      }\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let newH = (maxPoint - minPoint) / n\r\n    setH(newH)\r\n  }, [maxPoint, minPoint, n])\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let newPuntos = []\r\n      let lastX = minPoint;\r\n\r\n      newPuntos.push({\r\n        x: minPoint,\r\n        y: evaluate(equacion.replaceAll('x', `(${minPoint})`))\r\n      })\r\n\r\n      while (newPuntos.length !== n + 1) {\r\n        newPuntos.push({\r\n          x: lastX + h,\r\n          y: evaluate(equacion.replaceAll('x', `(${lastX + h})`))\r\n        })\r\n        lastX += h;\r\n      }\r\n\r\n      setPuntos(newPuntos)\r\n\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }, [equacion, h])\r\n\r\n  useEffect(() => {\r\n    setRes(\r\n      {\r\n        simple: evaluate(`((${getMax().x} - ${getMin().x})*(${getMin().y}+${getMax().y}))/2`),\r\n        compuesto: evaluate(`(${h}/2)*(${getMin().y} + 2*(${puntos.map(p => p.y).slice(1, puntos.length - 1).join(' + ')}) + ${getMax().y})`)\r\n      }\r\n    )\r\n  }, [puntos]);\r\n\r\n\r\n\r\n  function getMin() {\r\n    return {x: d3.min(puntos, p => p.x), y: d3.min(puntos, p => p.y)}\r\n  }\r\n\r\n  function getMax() {\r\n    return {x: d3.max(puntos, p => p.x), y: d3.max(puntos, p => p.y)}\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid divided columns={'2'}>\r\n        <Grid.Row>\r\n          <Grid.Column width={'16'}>\r\n            <Segment fluid>\r\n              <Input\r\n                label={'Equation: f(x):'}\r\n                placeholder={'f(x)'}\r\n                value={equacion}\r\n                onChange={(e, {value}) => setEquacion(value)}\r\n              />\r\n              <Input\r\n                type='range'\r\n                min={'1'}\r\n                max={'15'}\r\n                label={`n: ${n}`}\r\n                placeholder={'n subdivisones'}\r\n                value={n}\r\n                onChange={(e, {value}) => setN(Number(value))}\r\n              />\r\n              <Input\r\n                label={'Minimo'}\r\n                placeholder={'X Minimo'}\r\n                value={minPoint}\r\n                onChange={(e, {value}) => setMinPoint(value)}\r\n              />\r\n              <Input\r\n                label={'Maximo'}\r\n                placeholder={'X Maximo'}\r\n                value={maxPoint}\r\n                onChange={(e, {value}) => setMaxPoint(value)}\r\n              />\r\n              <Label>\r\n                h: (b-a)/n : {getMax().x - getMin().x}/{n} : {(getMax().x - getMin().x) / n}\r\n              </Label>\r\n              <Table celled>\r\n                <Table.Header>\r\n                  <Table.HeaderCell>\r\n                    x\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>\r\n                    y\r\n                  </Table.HeaderCell>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                  {puntos.map(p =>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        {p.x}\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        {p.y}\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  )}\r\n                </Table.Body>\r\n              </Table>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n\r\n            <Segment>\r\n              <Header>\r\n                Metodo de Trapecios Simple:\r\n              </Header>\r\n              <MathComponent tex={'\\\\frac{((b-a)*(f(a)+f(b)))}{2}'}/>\r\n              <MathComponent tex={`\\\\frac{((${getMax().x} - ${getMin().x})*(${getMin().y}+${getMax().y}))}{2} =`}/>\r\n              <Header textAlign=\"center\" as={'h4'}>\r\n                {res.simple}\r\n              </Header>\r\n            </Segment>\r\n\r\n            }\r\n\r\n\r\n          </Grid.Column>\r\n\r\n          <Grid.Column>\r\n\r\n            <Segment>\r\n              <Header>\r\n                Metodo de trapecios Compuestos\r\n              </Header>\r\n              <MathComponent tex={`\\\\Sigma_{i=1}^${n} (\\\\frac{h}{2}*(y_{i-1} + y_i))=`}/>\r\n              {\r\n                <MathComponent tex={\r\n                  `\\\\frac{${h}}{2} * (${getMin().y} + 2*(${puntos.map(p => p.y).slice(1, puntos.length - 1).join(' + ')}) + ${getMax().y})`\r\n                }/>\r\n              }\r\n              <Header textAlign=\"center\" as={'h4'}>\r\n                {res.compuesto}\r\n              </Header>\r\n            </Segment>\r\n\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetodosTrapecios;\r\n","import 'semantic-ui-css/semantic.min.css'\nimport {Route, BrowserRouter, Switch} from \"react-router-dom\";\nimport HomePage from \"./Pages/HomePage\";\nimport Navbar from \"./Components/Navbar\";\nimport EjerciciosA from \"./Pages/EjerciciosA\";\nimport Biseccion from \"./Pages/Biseccion\";\nimport PuntoFijo from \"./Pages/PuntoFijo\";\nimport NewtonRaphson from \"./Pages/NewtonRaphson\";\nimport PolinomioLagrange from \"./Pages/PolinomioLagrange\";\nimport MetodosTrapecios from \"./Pages/MetodosTrapecios\";\nimport MetodoRomberg from \"./Pages/MetodosRomberg\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <div>\n          <Navbar/>\n          <Route exact path={\"/\"} component={HomePage}/>\n          <Route exact path={\"/ejercicios_a\"} component={EjerciciosA}/>\n          <Route exact path={\"/biseccion\"} component={Biseccion}/>\n          <Route exact path={\"/punto_fijo\"} component={PuntoFijo}/>\n          <Route exact path={\"/newton_raphson\"} component={NewtonRaphson}/>\n          <Route exact path={\"/polinomio_lagrange\"} component={PolinomioLagrange}/>\n          <Route exact path={\"/metodo_trapecios\"} component={MetodosTrapecios}/>\n          <Route exact path={\"/metodo_romberg\"} component={MetodoRomberg}/>\n\n        </div>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["Pages/MetodosRomberg.js","Pages/HomePage.js","Components/Navbar.js","Components/TablaEjercicios.js","Pages/EjerciciosA.js","Pages/Biseccion.js","Components/LineChartPF.js","Components/useWindowSize.js","Pages/PuntoFijo.js","Components/LineChartNR.js","Pages/NewtonRaphson.js","Components/LineChartPoliLagrange.js","Pages/PolinomioLagrange.js","Pages/MetodosTrapecios.js","Pages/Gauss.js","App.js","reportWebVitals.js","index.js"],"names":["range","start","end","length","Array","from","_","i","MetodoRomberg","useState","puntos","setPuntos","equacion","setEquacion","maxDepth","setMaxDepth","minPoint","setMinPoint","maxPoint","setMaxPoint","useEffect","Romberg","console","log","e","error","divided","columns","Row","Column","width","fluid","label","placeholder","value","onChange","disabled","min","max","Number","celled","Header","map","n","HeaderCell","Math","pow","Body","p","Cell","Trapecio","ecuacion","h","newPuntos","lastX","push","x","y","evaluate","replaceAll","getMin","d3","getMax","slice","join","profundidad","eq","resArray","k","eval","reverse","HomePage","Segment","style","textAlign","Navbar","props","Menu","inverted","height","name","link","Item","as","Link","to","onClick","window","open","position","Icon","TablaEjercicios","ej","data","setData","ejercicio13","ejercicio14","ejercicio15","iter","va","res","exp","vv","Ea","abs","Er","nIter","iterRec","Table","EjerciciosA","setEj","pointing","secondary","ejercicio","active","Grid","textalign","Biseccion","rangoA","setRangoA","pi","rangoB","setRangoB","cotaError","scotaErrortE","numeroIteraciones","setNumeroIteraciones","valoresTabulador","setValoresTabulador","iteraciones","setIteraciones","inputTabulador","setInputTabulador","funcion","setFuncion","log2","ceil","Infinity","newIteraciones","fa","fb","middlePoint","fm","iterToPush","count","pointA","pointB","String","aa","falz","bb","fblz","rango","m","sign","rows","Form","Input","s","Group","Divider","Label","display","alignItems","justifyContent","Detail","vx","fx","Button","icon","color","valor","f","newVals","undefined","find","v","tabular","colSpan","LineChartPF","reload","d3Chart","useRef","containerRef","margin","current","offsetWidth","svg","attr","append","xScale","domain","d","yScale","scaleLinear","call","line","datum","filter","removeChild","children","ref","id","useWindowSize","size","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","PuntoFijo","funcionX","setFuncionX","funcionG","setFuncionG","puntoA","setPuntoA","puntoB","setPuntoB","answer","setAnswer","xZero","setXZero","dataToSet","gx","dominio","valsFX","valsGX","valoresXY","answerXY","concat","Dropdown","selection","options","key","text","xa","xb","newIters","update","$push","LineChartNR","NewtonRaphson","funcionF","setFuncionF","funcionDF","setFuncionDF","funcionDDF","setFuncionDDF","funcionDDDF","setFuncionDDDF","fdf","derivative","toString","fddf","fdddf","formula","modulofx","valsDFX","valsDDFX","valsDDDFX","lastVal","LineChartPolinomioLagrange","a","b","defined","PolinomioLagrange","puntoX","setPuntoX","polinomial","setPolinomial","LS","setLS","px","setPX","puntosPolinomio","setPuntosPolinomio","contenedorL","stringTop","stringBottom","j","p2","simplify","coeficiente","l","valsPX","onSubmit","includes","type","tex","MetodosTrapecios","setN","setH","simple","compuesto","setRes","err","Gauss","initMat","setInitMat","nMat","setNMat","resMat","setResMat","resulatdos","setResulatdos","newMat","matAdd","val","index","i1","val2","i2","JSON","parse","stringify","content","rMat","matInit","matrizDiagonal","pivote","row","col","gaussDecendente","resultados","r","reduce","pV","cV","getResultadoAscendente","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a4ec601.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Grid, Input, Segment, Table} from \"semantic-ui-react\";\r\nimport {evaluate} from \"mathjs\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst range = (start, end, length = end - start + 1) =>\r\n  Array.from({length}, (_, i) => start + i)\r\n\r\nfunction MetodoRomberg() {\r\n\r\n  const [puntos, setPuntos] = useState([\r\n    [],\r\n    [],\r\n    [],\r\n    []\r\n  ]);\r\n\r\n  const [equacion, setEquacion] = useState('x^2+2x+5');\r\n  const [maxDepth, setMaxDepth] = useState(4);\r\n  const [minPoint, setMinPoint] = useState(1);\r\n  const [maxPoint, setMaxPoint] = useState(2);\r\n\r\n  useEffect(() => {\r\n    setPuntos(Romberg(maxDepth, minPoint, maxPoint, equacion))\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    try {\r\n      console.log(Romberg(maxDepth, minPoint, maxPoint, equacion))\r\n      setPuntos(Romberg(maxDepth, minPoint, maxPoint, equacion));\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [equacion, maxDepth, maxPoint, minPoint])\r\n\r\n  return (\r\n    <div>\r\n      <Grid divided columns={'2'}>\r\n        <Grid.Row>\r\n          <Grid.Column width={'16'}>\r\n            <Segment fluid>\r\n              <Input\r\n                label={'Equation: f(x):'}\r\n                placeholder={'f(x)'}\r\n                value={equacion}\r\n                onChange={(e, {value}) => setEquacion(value)}\r\n              />\r\n              <Input\r\n                disabled={true}\r\n                min={'1'}\r\n                max={'8'}\r\n                label={`Profundidad: ${maxDepth}`}\r\n                placeholder={'max prfundidad'}\r\n                value={maxDepth}\r\n                onChange={(e, {value}) => setMaxDepth(Number(value * 2))}\r\n              />\r\n              <Input\r\n                label={'Minimo'}\r\n                placeholder={'X Minimo'}\r\n                value={minPoint}\r\n                onChange={(e, {value}) => setMinPoint(value)}\r\n              />\r\n              <Input\r\n                label={'Maximo'}\r\n                placeholder={'X Maximo'}\r\n                value={maxPoint}\r\n                onChange={(e, {value}) => setMaxPoint(value)}\r\n              />\r\n              <Table celled>\r\n                <Table.Header>\r\n                  {range(0, maxDepth - 1).map(n =>\r\n                    <Table.HeaderCell>\r\n                      n({Math.pow(2, n)})\r\n                    </Table.HeaderCell>\r\n                  )}\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                  {range(0, maxDepth - 1).map(n =>\r\n                    <Table.Row>\r\n                      {puntos[n].map(p => <Table.Cell>{p}</Table.Cell>)}\r\n                    </Table.Row>\r\n                  )}\r\n                </Table.Body>\r\n              </Table>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction Trapecio(minPoint, maxPoint, n, ecuacion) {\r\n  let h = (maxPoint - minPoint) / n\r\n\r\n\r\n  let newPuntos = [];\r\n  let lastX = minPoint;\r\n\r\n\r\n  newPuntos.push({\r\n    x: minPoint,\r\n    y: evaluate(ecuacion.replaceAll('x', `(${minPoint})`))\r\n  })\r\n\r\n  while (newPuntos.length !== n + 1) {\r\n    newPuntos.push({\r\n      x: lastX + h,\r\n      y: evaluate(ecuacion.replaceAll('x', `(${lastX + h})`))\r\n    })\r\n    lastX += h;\r\n  }\r\n\r\n  function getMin() {\r\n    return {x: d3.min(newPuntos, p => p.x), y: d3.min(newPuntos, p => p.y)}\r\n  }\r\n\r\n  function getMax() {\r\n    return {x: d3.max(newPuntos, p => p.x), y: d3.max(newPuntos, p => p.y)}\r\n  }\r\n\r\n  if (newPuntos.length === 2) {\r\n    return evaluate(`(${h}/2)*(${getMin().y} +  ${getMax().y})`)\r\n  } else {\r\n    return evaluate(`(${h}/2)*(${getMin().y} + 2*(${newPuntos.map(p => p.y).slice(1, newPuntos.length - 1).join(' + ')}) + ${getMax().y})`)\r\n  }\r\n}\r\n\r\n\r\nfunction Romberg(profundidad, minPoint, maxPoint, eq) {\r\n\r\n  let resArray = range(0, profundidad - 1).map(() => [])\r\n\r\n  range(0, profundidad - 1).map(n => {\r\n    resArray[n] = range(0, n)\r\n  })\r\n\r\n  resArray[resArray.length - 1] = range(0, profundidad - 1).map(n => {\r\n    return Trapecio(Number(minPoint), Number(maxPoint), Math.pow(2, n), eq)\r\n  })\r\n\r\n  // console.log(resArray)\r\n\r\n  for (let i = resArray.length - 2; i !== -1; i--) {\r\n    // console.log(resArray[i])\r\n\r\n    resArray[i] = resArray[i].map(n => {\r\n      // console.log(`${resArray[i + 1][n]}, ${resArray[i + 1][n + 1]}`)\r\n      let k = profundidad - i;\r\n\r\n      // eslint-disable-next-line no-eval\r\n      return eval(`(((4 ^ (${k} - 1)) * (${resArray[i + 1][n + 1]})) - (${resArray[i + 1][n]})) / ((4 ^ (${k} - 1)) - 1)`)\r\n    })\r\n\r\n    // console.log(resArray[i])\r\n\r\n  }\r\n\r\n  // console.log(resArray)\r\n\r\n  return resArray.reverse();\r\n\r\n}\r\n\r\n\r\nexport default MetodoRomberg;\r\n","import React from 'react';\r\nimport {Header, Segment} from \"semantic-ui-react\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <Segment placeholder style={{textAlign: 'center'}}>\r\n      <Header>\r\n        Estos son los tps y implementaciones desarollados\r\n      </Header>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport {Icon, Menu} from \"semantic-ui-react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n\r\n  const items = [\r\n    {name: \"Home\", link: \"/\"},\r\n    {name: \"Ejercicios: 13, 14, 15\", link: \"/ejercicios_a\"},\r\n    {name: \"Biseccion\", link: \"/biseccion\"},\r\n    {name: \"Punto Fijo\", link: \"/punto_fijo\"},\r\n    {name: \"Newton Raphson\", link: \"/newton_raphson\"},\r\n    {name: \"Polinomio de Lagrange\", link: \"/polinomio_lagrange\"},\r\n    {name: \"Metodos de Los Trapecios\", link: \"/metodo_trapecios\"},\r\n    {name: \"Metodo de Romberg\", link: \"/metodo_romberg\"},\r\n    {name: \"Metodo de Gauss\", link: \"/metodo_gauss\"},\r\n\r\n  ]\r\n\r\n  return (\r\n    <Menu inverted style={{height: '5%'}}>\r\n      {\r\n        items.map(i =>\r\n          <Menu.Item\r\n            as={Link} to={i.link}\r\n            name={i.name}\r\n          >\r\n            {i.name}\r\n          </Menu.Item>\r\n        )\r\n      }\r\n      <Menu.Item\r\n        onClick={() => window.open('https://github.com/OrionVi1998/analisis-numerico', '_self')}\r\n        position={'right'}\r\n      >\r\n        <Icon name={'github'} />\r\n        Desarollado por OrionVi1998\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Table} from \"semantic-ui-react\";\r\n\r\nfunction TablaEjercicios({ej}) {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    if (ej === 13) {\r\n      setData(ejercicio13(30))\r\n    }\r\n    if (ej === 14) {\r\n      setData(ejercicio14(30))\r\n    }\r\n    if (ej === 15) {\r\n      setData(ejercicio15(25))\r\n    }\r\n\r\n  }, [ej])\r\n\r\n  const ejercicio13 = (iter) => {\r\n    let res = [];\r\n    let h;\r\n    let va;\r\n    /*{i, h, VV, VA, EA, ER}*/\r\n    while (iter !== 0) {\r\n      h = Math.pow(2, -iter)\r\n      va = (Math.exp(h) - Math.exp(0)) / h\r\n\r\n      res.push(\r\n        {\r\n          i: iter,\r\n          h: h,\r\n          vv: Math.exp(0),\r\n          va: va,\r\n          Ea: Math.abs((va - Math.exp(0))),\r\n          Er: Math.abs((va - Math.exp(0))) / Math.exp(0)\r\n        }\r\n      );\r\n      iter -= 1\r\n    }\r\n    return res.reverse();\r\n  }\r\n\r\n  const ejercicio14 = (iter) => {\r\n    let res = [];\r\n    let h;\r\n    let va;\r\n    /*{i, h, VV, VA, EA, ER}*/\r\n    while (iter !== 0) {\r\n      h = Math.pow(2, -iter)\r\n      va = (Math.exp(h) - Math.exp(-h)) / (2 * h)\r\n\r\n      res.push(\r\n        {\r\n          i: iter,\r\n          h: h,\r\n          vv: Math.exp(0),\r\n          va: va,\r\n          Ea: Math.abs((va - Math.exp(0))),\r\n          Er: Math.abs((va - Math.exp(0))) / Math.exp(0)\r\n        }\r\n      );\r\n      iter -= 1\r\n    }\r\n    return res.reverse();\r\n  }\r\n\r\n  const ejercicio15 = (nIter) => {\r\n\r\n    let res = [];\r\n\r\n    const iterRec = (iter) => {\r\n      if (iter === 0) {\r\n        return Math.log(1.1);\r\n      } else {\r\n        return (1 / iter) - 10 * iterRec(iter - 1)\r\n      }\r\n    };\r\n\r\n    while (nIter !== 0) {\r\n      res.push(\r\n        {\r\n          i: nIter,\r\n          h: \"N/A\",\r\n          vv: iterRec(nIter),\r\n          va: \"N/A\",\r\n          Ea: \"N/A\",\r\n          Er: \"N/A\"\r\n        }\r\n      );\r\n      nIter -= 1\r\n    }\r\n\r\n    res.push({\r\n      i: 0,\r\n      h: \"N/A\",\r\n      vv: Math.log(1.1),\r\n      va: \"N/A\",\r\n      Ea: \"N/A\",\r\n      Er: \"N/A\"\r\n    })\r\n\r\n    return res.reverse();\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Table celled style={{width: '100%'}}>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>i</Table.HeaderCell>\r\n          <Table.HeaderCell>h</Table.HeaderCell>\r\n          <Table.HeaderCell>Valor Verdadero</Table.HeaderCell>\r\n          <Table.HeaderCell>Valor approx.</Table.HeaderCell>\r\n          <Table.HeaderCell>Error Absoluto</Table.HeaderCell>\r\n          <Table.HeaderCell>Error Relativo</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n\r\n      <Table.Body>\r\n        {data.map(iter =>\r\n          <Table.Row>\r\n            <Table.Cell>{iter.i}</Table.Cell>\r\n            <Table.Cell>{iter.h}</Table.Cell>\r\n            <Table.Cell>{iter.vv}</Table.Cell>\r\n            <Table.Cell>{iter.va}</Table.Cell>\r\n            <Table.Cell>{iter.Ea}</Table.Cell>\r\n            <Table.Cell>{iter.Er}</Table.Cell>\r\n          </Table.Row>\r\n        )}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default TablaEjercicios;\r\n","import React, {useState} from 'react';\r\nimport {Grid, Menu} from \"semantic-ui-react\";\r\nimport TablaEjercicios from \"../Components/TablaEjercicios\";\r\n\r\nfunction EjerciciosA(props) {\r\n\r\n  const [ej, setEj] = useState(13);\r\n  const ejercicios = [\r\n    {\r\n      name: \"Ejercicio 13\",\r\n      value: 13\r\n    },\r\n    {\r\n      name: \"Ejercicio 14\",\r\n      value: 14\r\n    },\r\n    {\r\n      name: \"Ejercicio 15\",\r\n      value: 15\r\n    }\r\n  ]\r\n  return (\r\n    <div>\r\n      <Menu pointing secondary style={{height:\"6%\"}}>\r\n        {\r\n          ejercicios.map(ejercicio =>\r\n            <Menu.Item\r\n              onClick={() => setEj(ejercicio.value)}\r\n              active={ejercicio.value === ej}\r\n            >\r\n              {ejercicio.name}\r\n            </Menu.Item>\r\n          )\r\n        }\r\n      </Menu>\r\n\r\n      <Grid style={{height: '89%', width: '100%'}} columns={1} textalign=\"center\" divided>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <TablaEjercicios ej={ej}/>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EjerciciosA;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Grid, Form, Segment, Divider, Label, Table, Button, Input} from \"semantic-ui-react\";\r\nimport {evaluate, pi} from \"mathjs\";\r\n\r\nconst Biseccion = () => {\r\n\r\n  const [rangoA, setRangoA] = useState(0);\r\n  const [rangoB, setRangoB] = useState(pi / 2);\r\n  const [cotaError, scotaErrortE] = useState(0.05);\r\n  const [numeroIteraciones, setNumeroIteraciones] = useState(0);\r\n  const [valoresTabulador, setValoresTabulador] = useState([]);\r\n  const [iteraciones, setIteraciones] = useState([]);\r\n  const [inputTabulador, setInputTabulador] = useState(\"\");\r\n  const [funcion, setFuncion] = useState(\"cos(x)-x\");\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let res;\r\n      res = -Math.log2((cotaError / (rangoB - rangoA)))\r\n      if (Math.ceil(res)!==-Infinity) {\r\n        setNumeroIteraciones(Math.ceil(res))\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }, [rangoA, rangoB, cotaError]);\r\n\r\n\r\n  useEffect(() => {\r\n    setValoresTabulador([])\r\n    try {\r\n      setIteraciones([])\r\n      let newIteraciones;\r\n      let count = 0;\r\n      let fa;\r\n      let fb;\r\n      let middlePoint;\r\n      let fm;\r\n      let pointA = rangoA;\r\n      let pointB = rangoB;\r\n      let iterToPush;\r\n\r\n      newIteraciones = []\r\n\r\n      while (count !== numeroIteraciones && numeroIteraciones <= 50) {\r\n        count += 1\r\n        middlePoint = (pointA + pointB) / 2;\r\n\r\n        fa = funcion.replaceAll(\"x\", `(${String(pointA)})`);\r\n        fa = evaluate(fa);\r\n        fb = funcion.replaceAll(\"x\", `(${String(pointB)})`);\r\n        fb = evaluate(fb);\r\n        fm = funcion.replaceAll(\"x\", `(${String(middlePoint)})`);\r\n        fm = evaluate(fm);\r\n\r\n        iterToPush = {\r\n          i: count,\r\n          aa: pointA,\r\n          fa: fa,\r\n          falz: String((fa * fm) < 0),\r\n          bb: pointB,\r\n          fb: fb,\r\n          fblz: String((fb * fm) < 0),\r\n          rango: `[${pointA}, ${pointB}]`,\r\n          m: middlePoint,\r\n          fm: fm\r\n        };\r\n\r\n        if (Math.sign((iterToPush.fa)) === Math.sign(iterToPush.fm)) {\r\n          pointA = middlePoint;\r\n          pointB = iterToPush.bb;\r\n        } else {\r\n          pointA = iterToPush.aa;\r\n          pointB = middlePoint;\r\n        }\r\n\r\n        newIteraciones.push(iterToPush)\r\n\r\n      }\r\n      setIteraciones(newIteraciones)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }, [funcion, rangoA, rangoB, numeroIteraciones]);\r\n\r\n  const tabular = (valor) => {\r\n    try {\r\n      let f;\r\n      f = funcion.replaceAll(\"x\", `(${valor})`);\r\n      f = evaluate(f);\r\n      let newVals = valoresTabulador;\r\n      if (newVals.find((v) => v.x === valor) === undefined && funcion !== \"\") {\r\n        newVals.push({x: valor, fx: f})\r\n        setValoresTabulador(newVals)\r\n        setInputTabulador(\"\")\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <Grid rows={\"2\"} columns={\"2\"} divided>\r\n      <Grid.Row>\r\n        <Grid.Column style={{width: \"100vw\"}}>\r\n          <Segment>\r\n            <Form>\r\n              <label>Funcion</label>\r\n              <Form.Input\r\n                placeholder={\"Funcion\"}\r\n                name={\"funcion\"}\r\n                value={funcion}\r\n                onChange={(e, s) => setFuncion(s.value)}\r\n              />\r\n              <label>Rango</label>\r\n              <Form.Group>\r\n                <Form.Input\r\n                  placeholder=\"a\"\r\n                  name={\"a\"}\r\n                  value={rangoA}\r\n                  onChange={(e, s) => setRangoA(s.value)}\r\n                />\r\n                <Form.Input\r\n                  placeholder=\"b\"\r\n                  name=\"b\"\r\n                  value={rangoB}\r\n                  onChange={(e, s) => setRangoB(s.value)}\r\n                />\r\n              </Form.Group>\r\n              <Divider/>\r\n              <label>\r\n                Error:\r\n                <br/>\r\n                (b - a) * 2^(-k) &lt;= error\r\n                <br/>\r\n                k &gt;= -log2(e / (b - a))\r\n              </label>\r\n\r\n              <Form.Group>\r\n                <Form.Input\r\n                  placeholder={\"Error\"}\r\n                  name={\"e\"}\r\n                  value={cotaError}\r\n                  onChange={(e, s) => scotaErrortE(s.value)}\r\n                />\r\n                <Label style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n                  Iteraciones a Realizar\r\n                  <Label.Detail>\r\n                    {numeroIteraciones}\r\n                  </Label.Detail>\r\n                </Label>\r\n              </Form.Group>\r\n            </Form>\r\n            <Divider/>\r\n            <Table celled textAlign={\"center\"}>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell> X </Table.HeaderCell>\r\n                  <Table.HeaderCell> f(x) </Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              {/*CELLS already Found*/}\r\n              <Table.Body>\r\n                {valoresTabulador.map(vx =>\r\n                  <Table.Row>\r\n                    <Table.Cell>{vx.x}</Table.Cell>\r\n                    <Table.Cell>{vx.fx}</Table.Cell>\r\n                  </Table.Row>\r\n                )}\r\n                <Table.Row>\r\n                  {/*Tabulator Button*/}\r\n                  <Table.Cell>\r\n                    <Input\r\n                      placeholder={\"Valor de X\"}\r\n                      value={inputTabulador}\r\n                      onChange={(e, s) => setInputTabulador(s.value)}\r\n                    />\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    <Button\r\n                      icon={\"plus\"}\r\n                      color={\"green\"}\r\n                      onClick={() => {\r\n                        tabular(inputTabulador)\r\n                      }}\r\n                    />\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            </Table>\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n        {/*  TODO: Plot of function | Rules that need to be verified */}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Segment style={{width: \"100vw\"}}>\r\n          <Table celled textAlign={\"center\"}>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell> i </Table.HeaderCell>\r\n                <Table.HeaderCell> a </Table.HeaderCell>\r\n                <Table.HeaderCell> f(a) </Table.HeaderCell>\r\n                <Table.HeaderCell> f(a)&lt;0 </Table.HeaderCell>\r\n                <Table.HeaderCell> b </Table.HeaderCell>\r\n                <Table.HeaderCell> f(b) </Table.HeaderCell>\r\n                <Table.HeaderCell> f(b)&lt;0 </Table.HeaderCell>\r\n                <Table.HeaderCell> m </Table.HeaderCell>\r\n                <Table.HeaderCell> f(m) </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              {iteraciones.map(i =>\r\n                <Table.Row>\r\n                  <Table.Cell>{i.i}</Table.Cell>\r\n                  <Table.Cell active>{i.aa}</Table.Cell>\r\n                  <Table.Cell>{i.fa}</Table.Cell>\r\n                  <Table.Cell>{i.falz}</Table.Cell>\r\n                  <Table.Cell active>{i.bb}</Table.Cell>\r\n                  <Table.Cell>{i.fb}</Table.Cell>\r\n                  <Table.Cell>{i.fblz}</Table.Cell>\r\n                  <Table.Cell active>{i.m}</Table.Cell>\r\n                  <Table.Cell>{i.fm}</Table.Cell>\r\n                </Table.Row>\r\n              )}\r\n              <Table.Row>\r\n                <Table.Cell colSpan={\"10\"}>\r\n                  <Button\r\n                    icon={\"plus\"}\r\n                    color={\"green\"}\r\n                    onClick={() => setNumeroIteraciones(numeroIteraciones+1)}\r\n                  />\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n        </Segment>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Biseccion;\r\n","import React, {useEffect, useRef} from 'react';\r\nimport * as d3 from \"d3\";\r\nimport {scaleLinear} from \"d3\";\r\n\r\nconst LineChartPF = ({data, reload}) => {\r\n\r\n  const d3Chart = useRef();\r\n  const containerRef = useRef();\r\n\r\n  useEffect(() => {\r\n\r\n    const margin = {top:50, bottom:30, right:30, left:30};\r\n    const width = (containerRef.current ? containerRef.current.offsetWidth : 500) - 65;\r\n    const height = 500;\r\n\r\n    const svg = d3.select(d3Chart.current)\r\n    .attr(\"width\", width+margin.left+margin.right)\r\n    .attr(\"height\", height+margin.top+margin.bottom)\r\n    .style(\"background-color\",\"lightgrey\")\r\n    .append(\"g\")\r\n    .attr(\"transform\", `translate(${margin.left},${margin.right})`);\r\n\r\n    const xScale = d3.scaleLinear()\r\n    .domain(d3.extent(data, d => d.x))\r\n    .range([0, width])\r\n\r\n    const yScale = scaleLinear()\r\n    .domain(d3.extent(data, d => d.x))\r\n    .range([height, 0])\r\n\r\n    svg.append(\"g\")\r\n    .attr(\"transform\", `translate(0, ${height})`)\r\n    .call(d3.axisBottom(xScale))\r\n\r\n    svg.append(\"g\")\r\n    .call(d3.axisLeft(yScale))\r\n\r\n    let line = d3.line()\r\n    .x(d => xScale(d.x))\r\n    .y(d => yScale(d.y))\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"xy\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"green\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"fx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"red\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"gx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"blue\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"answerXY\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"blue\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    return () => {\r\n      try {\r\n        d3Chart.current.removeChild(d3Chart.current.children[0])\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  },[data, reload]);\r\n\r\n  return (\r\n    <div ref={containerRef} id={\"d3LineChartPF\"}>\r\n      <svg ref={d3Chart}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChartPF;\r\n","import {useLayoutEffect, useState} from \"react\";\r\n\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nexport default useWindowSize;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Form, Grid, Table, Segment, Dropdown, Button, Label} from \"semantic-ui-react\";\r\nimport LineChartPF from \"../Components/LineChartPF\";\r\nimport {evaluate} from \"mathjs\";\r\nimport * as d3 from \"d3\";\r\nimport update from \"immutability-helper\";\r\nimport useWindowSize from \"../Components/useWindowSize\";\r\n\r\n\r\nconst PuntoFijo = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [funcionX, setFuncionX] = useState(\"(x^2)-(3*x)-(1)\");\r\n  const [funcionG, setFuncionG] = useState(\"((x^2)-1)/3\");\r\n  const [puntoA, setPuntoA] = useState(-1);\r\n  const [puntoB, setPuntoB] = useState(0);\r\n  const [answer, setAnswer] = useState(0);\r\n  const [xZero, setXZero] = useState(puntoB);\r\n  const [iteraciones, setIteraciones] = useState([]);\r\n  const [width, height] = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let dataToSet = [];\r\n      if (answer === 0) {\r\n        setIteraciones([{\r\n          i: 0,\r\n          x: xZero,\r\n          gx: evaluate(funcionG.replaceAll(\"x\", `(${xZero})`))\r\n        }])\r\n      }\r\n\r\n      let dominio = d3.range(puntoA, puntoB, 0.05)\r\n      let valsFX = dominio.map(x => (\r\n        {funcion: \"fx\", x: Number(x), y: evaluate(funcionX.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n      let valsGX = dominio.map(x => (\r\n        {funcion: \"gx\", x: Number(x), y: evaluate(funcionG.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n      let valoresXY = dominio.map(x => (\r\n        {funcion: \"xy\", x: Number(x), y: Number(x)}\r\n      ))\r\n      let answerXY = dominio.map(x => (\r\n        {funcion: \"answerXY\", x: Number(answer), y: Number(x)}\r\n      ))\r\n\r\n      dataToSet = dataToSet.concat(valsFX).concat(valsGX).concat(valoresXY).concat(answerXY)\r\n      setData(dataToSet)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }, [funcionX, funcionG, puntoA, puntoB, answer, xZero]);\r\n\r\n\r\n  return (\r\n    <Grid rows={\"2\"} columns={\"2\"} divided>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form>\r\n              <Label\r\n                color=\"red\"\r\n              >\r\n                F(x)\r\n              </Label>\r\n              <Form.Input\r\n                placeholder={\"F(x) (Rojo)\"}\r\n                value={funcionX}\r\n                onChange={(e, s) => setFuncionX(s.value)}\r\n              />\r\n\r\n              <Label\r\n              color={\"blue\"}\r\n              >\r\n                G(x)\r\n              </Label>\r\n              <Form.Input\r\n                placeholder={\"G(x) (Azul)\"}\r\n                value={funcionG}\r\n                onChange={(e, s) => setFuncionG(s.value)}\r\n              />\r\n\r\n              <Form.Group>\r\n                <Label>Rango A - B :</Label>\r\n                <Form.Input\r\n                  placeholder={\"a\"}\r\n                  value={puntoA}\r\n                  onChange={(e, s) => setPuntoA(s.value)}\r\n                />\r\n                <Form.Input\r\n                  placeholder={\"b\"}\r\n                  value={puntoB}\r\n                  onChange={(e, s) => setPuntoB(s.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Label>\r\n                X0\r\n              </Label>\r\n              <br/>\r\n              <Dropdown\r\n                placeholder={\"x0\"}\r\n                selection\r\n                options={[{key: \"a\", value: puntoA, text: `a = ${puntoA}`}, {\r\n                  key: \"b\",\r\n                  value: puntoB,\r\n                  text: `b = ${puntoB}`\r\n                }]}\r\n                value={xZero}\r\n                onChange={(e, s) => {\r\n                  setIteraciones([{i: 0, x: xZero, gx: evaluate(funcionG.replaceAll(\"x\", `(${xZero})`))}])\r\n                  setXZero(s.value)\r\n                }}\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <LineChartPF  reload={{width, height}} data={data} rango={{xa: puntoA, xb: puntoB}}/>\r\n          </Segment>\r\n        </Grid.Column>\r\n\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column width={\"16\"}>\r\n          <Segment>\r\n            <Table celled textAlign={\"center\"}>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>\r\n                    i\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>\r\n                    x\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>\r\n                    g(x)\r\n                  </Table.HeaderCell>\r\n                </Table.Row>\r\n\r\n              </Table.Header>\r\n              <Table.Body>\r\n\r\n                {iteraciones.map(i =>\r\n                  <Table.Row>\r\n                    <Table.Cell>{i.i}</Table.Cell>\r\n                    <Table.Cell>{i.x}</Table.Cell>\r\n                    <Table.Cell>{i.gx}</Table.Cell>\r\n                  </Table.Row>\r\n                )}\r\n                <Table.Row>\r\n                  <Table.Cell colSpan={\"3\"}>\r\n                    <Button\r\n                      icon={\"plus\"}\r\n                      color={\"green\"}\r\n                      onClick={() => {\r\n                        try {\r\n                          const newIters = update(iteraciones, {$push:[{\r\n                              i: iteraciones[iteraciones.length - 1].i+1,\r\n                              x: iteraciones[iteraciones.length - 1].gx,\r\n                              gx: evaluate(funcionG.replaceAll(\"x\", `(${iteraciones[iteraciones.length - 1].gx})`))\r\n                            }]});\r\n                          setAnswer(evaluate(funcionG.replaceAll(\"x\", `(${newIters[newIters.length - 1].gx})`)))\r\n                          setIteraciones(newIters)\r\n                        } catch (error) {\r\n                          console.log(error)\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            </Table>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PuntoFijo;\r\n","import React, {useEffect, useRef} from 'react';\r\nimport * as d3 from \"d3\";\r\nimport {scaleLinear} from \"d3\";\r\n\r\nconst LineChartNR = ({data, reload}) => {\r\n\r\n  const d3Chart = useRef();\r\n  const containerRef = useRef();\r\n\r\n  useEffect(() => {\r\n\r\n    const margin = {top:50, bottom:30, right:30, left:30};\r\n    const width = (containerRef.current ? containerRef.current.offsetWidth : 500) - 75;\r\n    const height = 500;\r\n\r\n    const svg = d3.select(d3Chart.current)\r\n    .attr(\"width\", width+margin.left+margin.right)\r\n    .attr(\"height\", height+margin.top+margin.bottom)\r\n    .style(\"background-color\",\"lightgrey\")\r\n    .append(\"g\")\r\n    .attr(\"transform\", `translate(${margin.left},${margin.right})`);\r\n\r\n    const xScale = d3.scaleLinear()\r\n    .domain(d3.extent(data, d => d.x))\r\n    .range([0, width])\r\n\r\n    const yScale = scaleLinear()\r\n    .domain(d3.extent(data, d => d.y))\r\n    .range([height, 0])\r\n\r\n    svg.append(\"g\")\r\n    .attr(\"transform\", `translate(0, ${height})`)\r\n    .call(d3.axisBottom(xScale))\r\n\r\n    svg.append(\"g\")\r\n    .call(d3.axisLeft(yScale))\r\n\r\n    let line = d3.line()\r\n    .x(d => xScale(d.x))\r\n    .y(d => yScale(d.y))\r\n\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"fx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"green\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"fdx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"red\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"fddx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"blue\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"fdddx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"orange\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    return () => {\r\n      try {\r\n        d3Chart.current.removeChild(d3Chart.current.children[0])\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  },[data, reload]);\r\n\r\n  return (\r\n    <div ref={containerRef} id={\"d3LineChartNR\"}>\r\n      <svg ref={d3Chart}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChartNR;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Button, Dropdown, Form, Grid, Label, Segment, Table} from \"semantic-ui-react\";\r\nimport {derivative, evaluate, pi} from \"mathjs\";\r\nimport LineChartNR from \"../Components/LineChartNR\";\r\nimport update from \"immutability-helper\";\r\nimport * as d3 from \"d3\";\r\nimport useWindowSize from \"../Components/useWindowSize\";\r\n\r\nconst NewtonRaphson = () => {\r\n\r\n  const [puntoA, setPuntoA] = useState(0);\r\n  const [puntoB, setPuntoB] = useState(pi / 2);\r\n  const [funcionF, setFuncionF] = useState(\"cos(x)-x\");\r\n  const [funcionDF, setFuncionDF] = useState(\"-(sin(x) + 1)\");\r\n  const [funcionDDF, setFuncionDDF] = useState(\"-cos(x)\");\r\n  const [funcionDDDF, setFuncionDDDF] = useState(\"sin(x)\");\r\n  const [data, setData] = useState([]);\r\n  const [xZero, setXZero] = useState(puntoB);\r\n  const [iteraciones, setIteraciones] = useState([]);\r\n  const [width, height] = useWindowSize();\r\n\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let fdf = derivative(funcionF, \"x\").toString();\r\n      let fddf = derivative(fdf, \"x\").toString();\r\n      let fdddf = derivative(fddf, \"x\").toString();\r\n      setFuncionDF(fdf);\r\n      setFuncionDDF(fddf);\r\n      setFuncionDDDF(fdddf);\r\n\r\n      setIteraciones([{\r\n        i:1,\r\n        x: xZero,\r\n        formula: evaluate(\r\n          \"x-((a)/(b))\"\r\n          .replaceAll(\"a\", funcionF)\r\n          .replaceAll(\"b\", fdf)\r\n          .replaceAll(\"x\", `(${xZero})`)\r\n        ),\r\n        modulofx:Math.abs(evaluate(funcionF.replaceAll(\"x\", `(${xZero})`)))\r\n      }])\r\n\r\n      let dataToSet = [];\r\n\r\n      let dominio = d3.range(puntoA, puntoB, 0.05)\r\n      let valsFX = dominio.map(x => (\r\n        {funcion: \"fx\", x: Number(x), y: evaluate(funcionF.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n      let valsDFX = dominio.map(x => (\r\n        {funcion: \"fdx\", x: Number(x), y: evaluate(funcionDF.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n      let valsDDFX = dominio.map(x => (\r\n        {funcion: \"fddx\", x: Number(x), y: evaluate(funcionDDF.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n      let valsDDDFX = dominio.map(x => (\r\n        {funcion: \"fdddx\", x: Number(x), y: evaluate(funcionDDDF.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n\r\n      dataToSet = dataToSet.concat(valsFX).concat(valsDFX).concat(valsDDFX).concat(valsDDDFX)\r\n      setData(dataToSet)\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }, [funcionF, puntoA, puntoB, xZero])\r\n\r\n  return (\r\n    <Grid rows={\"2\"} columns={\"2\"} divided>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form>\r\n              <Label\r\n                color={\"green\"}>\r\n                F(x)\r\n              </Label>\r\n              <Form.Input\r\n                placeholder={\"f(x)\"}\r\n                value={funcionF}\r\n                onChange={(e, s) => setFuncionF(s.value)}\r\n              />\r\n              <Label\r\n                color={\"red\"}\r\n                pointing={\"bottom\"}>\r\n                F'(x) = {funcionDF}\r\n              </Label>\r\n              <Label\r\n                color={\"blue\"}\r\n              >\r\n                F''(x) = {funcionDDF}\r\n              </Label>\r\n              <Label\r\n                color={\"orange\"}\r\n              >\r\n                F''(x) = {funcionDDDF}\r\n              </Label>\r\n              <br/>\r\n              <br/>\r\n              <Form.Group>\r\n                <Label>Rango A - B: </Label>\r\n                <Form.Input\r\n                  placeholder={\"punto a\"}\r\n                  value={puntoA}\r\n                  onChange={(e, s) => setPuntoA(s.value)}\r\n                />\r\n                <Form.Input\r\n                  placeholder={\"punto b\"}\r\n                  value={puntoB}\r\n                  onChange={(e, s) => setPuntoB(s.value)}\r\n                />\r\n              </Form.Group>\r\n              <Label>X0: </Label>\r\n              <Dropdown\r\n                placeholder={\"x0\"}\r\n                selection\r\n                options={[{key: \"a\", value: puntoA, text: `a = ${puntoA}`}, {\r\n                  key: \"b\",\r\n                  value: puntoB,\r\n                  text: `b = ${puntoB}`\r\n                }]}\r\n                value={xZero}\r\n                onChange={(e, s) => {\r\n                  setXZero(s.value)\r\n                }}\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <LineChartNR reload={{width, height}} data={data}/>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column width={\"16\"}>\r\n          <Segment>\r\n            <Table celled textAlign={\"center\"}>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>\r\n                    i\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>\r\n                    x\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>\r\n                    x = x-f/f'\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>\r\n                    | f(x) |\r\n                  </Table.HeaderCell>\r\n                </Table.Row>\r\n\r\n              </Table.Header>\r\n              <Table.Body>\r\n\r\n                {iteraciones.map(i =>\r\n                  <Table.Row>\r\n                    <Table.Cell>{i.i}</Table.Cell>\r\n                    <Table.Cell>{i.x}</Table.Cell>\r\n                    <Table.Cell>{i.formula}</Table.Cell>\r\n                    <Table.Cell>{i.modulofx}</Table.Cell>\r\n                  </Table.Row>\r\n\r\n                )}\r\n                <Table.Row>\r\n                  <Table.Cell colSpan={\"4\"}>\r\n                    <Button\r\n                      icon={\"plus\"}\r\n                      color={\"green\"}\r\n                      onClick={() => {\r\n                        try {\r\n\r\n                          const lastVal = iteraciones[iteraciones.length-1];\r\n                          const newIters = update(iteraciones, {$push:[\r\n                              {\r\n                                i: lastVal.i+1,\r\n                                x: lastVal.formula,\r\n                                formula: evaluate(\r\n                                  \"x-((a)/(b))\"\r\n                                  .replaceAll(\"a\", funcionF)\r\n                                  .replaceAll(\"b\", funcionDF)\r\n                                  .replaceAll(\"x\", `(${lastVal.formula})`)\r\n                                ),\r\n                                modulofx:Math.abs(evaluate(funcionF.replaceAll(\"x\", `(${lastVal.x})`)))\r\n                              }\r\n                            ]})\r\n\r\n                          setIteraciones(newIters)\r\n                        } catch (error) {\r\n                          console.log(error)\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            </Table>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewtonRaphson;\r\n","import React, {useEffect, useRef} from 'react';\r\nimport * as d3 from \"d3\";\r\nimport {scaleLinear} from \"d3\";\r\n\r\nconst LineChartPolinomioLagrange = ({data, a, b, reload}) => {\r\n\r\n  const d3Chart = useRef()\r\n  const containerRef = useRef();\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const margin = {top:50, bottom:30, right:30, left:30}\r\n    const width = (containerRef.current ? containerRef.current.offsetWidth : 500) - 65\r\n    const height = 500\r\n\r\n    const svg = d3.select(d3Chart.current)\r\n    .attr(\"width\", width+margin.left+margin.right)\r\n    .attr(\"height\", height+margin.top+margin.bottom)\r\n    .style(\"background-color\",\"lightgrey\")\r\n    .append(\"g\")\r\n    .attr(\"transform\", `translate(${margin.left},${margin.right})`);\r\n\r\n    const xScale = d3.scaleLinear()\r\n    .domain([a, b])\r\n    .range([0, width])\r\n\r\n    const yScale = scaleLinear()\r\n    .domain([a, b])\r\n    .range([height, 0])\r\n\r\n    svg.append(\"g\")\r\n    .attr(\"transform\", `translate(0, ${height})`)\r\n    .call(d3.axisBottom(xScale))\r\n\r\n    svg.append(\"g\")\r\n    .call(d3.axisLeft(yScale))\r\n\r\n    let line = d3.line()\r\n    .x(d => xScale(d.x))\r\n    .y(d => yScale(d.y))\r\n    .defined(d => d.y !== Infinity)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"fx\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"green\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n    svg.append(\"path\")\r\n    .datum(data.filter(d => d.funcion === \"px\"))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"red\")\r\n    .attr(\"stroke-width\",1)\r\n    .attr(\"d\",line)\r\n\r\n\r\n    return () => {\r\n      try {\r\n        d3Chart.current.removeChild(d3Chart.current.children[0])\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  },[a, b, data, reload]);\r\n\r\n  return (\r\n    <div ref={containerRef} id={\"d3LineChartPF\"}>\r\n      <svg ref={d3Chart}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChartPolinomioLagrange;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Form, Grid, Label, Segment, Table} from \"semantic-ui-react\";\r\nimport update from \"immutability-helper\";\r\nimport {evaluate, simplify} from \"mathjs\";\r\nimport {MathComponent} from \"mathjax-react\";\r\nimport * as d3 from \"d3\";\r\nimport LineChartPoliRaphson from \"../Components/LineChartPoliLagrange\";\r\nimport useWindowSize from \"../Components/useWindowSize\";\r\n\r\n\r\nconst PolinomioLagrange = () => {\r\n\r\n  const [funcion, setFuncion] = useState(\"1/x\");\r\n  const [puntos, setPuntos] = useState([\r\n    {x: \"1\", fx: \"1\"}, {x: \"-1\", fx: \"-1\"}, {x: \"2\", fx: \"0.5\"}\r\n  ]);\r\n  const [puntoX, setPuntoX] = useState(\"\");\r\n  const [polinomial, setPolinomial] = useState(\"\");\r\n  const [LS, setLS] = useState([]);\r\n  const [px, setPX] = useState([]);\r\n  const [puntosPolinomio, setPuntosPolinomio] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [puntoA, setPuntoA] = useState(\"\");\r\n  const [puntoB, setPuntoB] = useState(\"\");\r\n  const [width, height] = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let contenedorL = [];\r\n      setPuntosPolinomio([])\r\n\r\n      for (let i = 0; i < puntos.length; i++) {\r\n        let p = puntos[i];\r\n        let stringTop = \"\";\r\n        let stringBottom = \"\";\r\n\r\n        for (let j = 0; j < puntos.length; j++) {\r\n          if (j !== i) {\r\n            let p2 = puntos[j]\r\n            stringTop += `((x)-(${p2.x}))`\r\n            stringBottom += `((${p.x})-(${p2.x}))`\r\n          }\r\n        }\r\n\r\n        contenedorL.push({\r\n          id: `L${i}`,\r\n          formula: `((${simplify(stringTop).toString()})/(${evaluate(stringBottom)}))`,\r\n          coeficiente: `(${p.fx})`\r\n        })\r\n      }\r\n\r\n      setLS(contenedorL)\r\n      setPolinomial(contenedorL.map(l => `(${l.formula}*${l.coeficiente})`).join(\"+\"))\r\n\r\n      let dataToSet = [];\r\n      setPuntoA(Number(d3.min(puntos, p => Number(p.x))) - 1)\r\n      setPuntoB(Number(d3.max(puntos, p => Number(p.x))) + 1)\r\n\r\n      let dominio;\r\n\r\n      if (puntos.length > 1) {\r\n        dominio = d3.range(puntoA, puntoB, 0.1);\r\n      } else {\r\n        dominio = d3.range(-2, 2, 0.1);\r\n      }\r\n\r\n      let valsFX = dominio.map(x => (\r\n        {funcion: \"fx\", x: Number(x), y: evaluate(funcion.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n      let valsPX = dominio.map(x => (\r\n        {funcion: \"px\", x: Number(x), y: evaluate(polinomial.replaceAll(\"x\", `(${x})`))}\r\n      ))\r\n\r\n      dataToSet = dataToSet.concat(valsFX).concat(valsPX)\r\n      setData(dataToSet)\r\n\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, [puntos, funcion, polinomial])\r\n\r\n  return (\r\n    <Grid rows={\"2\"} columns={\"2\"} divided>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form>\r\n              <Label\r\n                color=\"green\"\r\n              >\r\n                F(x)\r\n              </Label>\r\n              <Form.Input\r\n                placeholder={\"F(x)\"}\r\n                value={funcion}\r\n                onChange={(e, s) => {\r\n                  setPuntos([])\r\n                  setFuncion(s.value)\r\n                }}\r\n              />\r\n            </Form>\r\n            <br/>\r\n            <Table textAlign={\"center\"} celled>\r\n              <Table.Header>\r\n                <Table.HeaderCell>x</Table.HeaderCell>\r\n                <Table.HeaderCell>f(x)</Table.HeaderCell>\r\n              </Table.Header>\r\n\r\n              <Table.Body>\r\n\r\n                {puntos.map(p =>\r\n                  <Table.Row>\r\n                    <Table.Cell>{p.x}</Table.Cell>\r\n                    <Table.Cell>{p.fx}</Table.Cell>\r\n                  </Table.Row>\r\n                )}\r\n\r\n                <Table.Row>\r\n                  <Table.Cell colSpan={\"2\"}>\r\n                    <Form\r\n                      onSubmit={() => {\r\n                        try {\r\n                          if (!puntos.map(p => p.x).includes(puntoX)) {\r\n                            setPuntos(update(puntos, {\r\n                              $push: [\r\n                                {\r\n                                  x: puntoX,\r\n                                  fx: evaluate(funcion.replaceAll(\"x\", `(${puntoX})`))\r\n                                }\r\n                              ]\r\n                            }))\r\n                          }\r\n                          setPuntoX(\"\")\r\n                        } catch (error) {\r\n                          console.log(error)\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Form.Group>\r\n                        <Form.Input\r\n                          name={\"x\"}\r\n                          placeholder={\"x\"}\r\n                          value={puntoX}\r\n                          onChange={(e, s) => setPuntoX(s.value)}\r\n                        />\r\n                        <Form.Button\r\n                          icon={\"plus\"}\r\n                          color={\"green\"}\r\n                          type={\"submit\"}\r\n                        />\r\n                      </Form.Group>\r\n                    </Form>\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n\r\n              </Table.Body>\r\n            </Table>\r\n          </Segment>\r\n\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <MathComponent tex={`P(x) = ` + polinomial}/>\r\n          </Segment>\r\n          <Segment>\r\n            <LineChartPoliRaphson\r\n              reload={{width, height}}\r\n              data={data}\r\n              a={puntoA}\r\n              b={puntoB}\r\n            />\r\n          </Segment>\r\n          <Table textAlign={\"center\"} celled>\r\n            <Table.Header>\r\n              <Table.HeaderCell>Ln</Table.HeaderCell>\r\n              <Table.HeaderCell>Formula</Table.HeaderCell>\r\n              <Table.HeaderCell>Coeficiente</Table.HeaderCell>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              {LS.map(l =>\r\n                <Table.Row>\r\n                  <Table.Cell>{l.id}</Table.Cell>\r\n                  <Table.Cell>\r\n                    <MathComponent tex={l.formula}/>\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    {l.coeficiente}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              )}\r\n            </Table.Body>\r\n          </Table>\r\n\r\n          <Table celled textAlign={\"center\"}>\r\n            <Table.Header>\r\n              <Table.HeaderCell>x</Table.HeaderCell>\r\n              <Table.HeaderCell>P(x)</Table.HeaderCell>\r\n            </Table.Header>\r\n            <Table.Body>\r\n\r\n              {puntosPolinomio.map(p =>\r\n                <Table.Row>\r\n                  <Table.Cell>{p.x}</Table.Cell>\r\n                  <Table.Cell>{p.px}</Table.Cell>\r\n                </Table.Row>\r\n              )}\r\n\r\n              <Table.Row>\r\n                <Table.Cell colSpan={\"2\"}>\r\n                  <Form\r\n                    onSubmit={() => {\r\n                      try {\r\n                        if (!puntosPolinomio.map(p => p.x).includes(px)) {\r\n                          setPuntosPolinomio(update(puntosPolinomio, {\r\n                            $push: [\r\n                              {\r\n                                x: px,\r\n                                px: evaluate(polinomial.replaceAll(\"x\", `(${px})`))\r\n                              }\r\n                            ]\r\n                          }))\r\n                        }\r\n                        setPX(\"\")\r\n                      } catch (error) {\r\n                        console.log(error)\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Form.Group>\r\n                      <Form.Input\r\n                        name={\"px\"}\r\n                        placeholder={\"x\"}\r\n                        value={px}\r\n                        onChange={(e, s) => setPX(s.value)}\r\n                      />\r\n                      <Form.Button\r\n                        icon={\"plus\"}\r\n                        color={\"green\"}\r\n                        type={\"submit\"}\r\n                      />\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PolinomioLagrange;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Grid, Header, Input, Label, Loader, Segment, Table} from \"semantic-ui-react\";\r\nimport {MathComponent} from \"mathjax-react\";\r\nimport {evaluate} from \"mathjs\";\r\nimport * as d3 from \"d3\";\r\n\r\n\r\nfunction MetodosTrapecios(props) {\r\n\r\n  const [puntos, setPuntos] = useState([\r\n    {x: 1, y: 8},\r\n    {x: 1.25, y: 9.1},\r\n    {x: 1.5, y: 10.25},\r\n    {x: 1.75, y: 11.56},\r\n    {x: 2, y: 13}\r\n  ]);\r\n\r\n  const [equacion, setEquacion] = useState('x^2+2x+5');\r\n  const [n, setN] = useState(4);\r\n  const [h, setH] = useState(0.25);\r\n  const [minPoint, setMinPoint] = useState(1)\r\n  const [maxPoint, setMaxPoint] = useState(2);\r\n\r\n  const [res, setRes] = useState({simple: \"Na\", compuesto: \"Na\"});\r\n\r\n  useEffect(() => {\r\n    setRes(\r\n      {\r\n        simple: evaluate(`((${getMax().x} - ${getMin().x})*(${getMin().y}+${getMax().y}))/2`),\r\n        compuesto: evaluate(`(${h}/2)*(${getMin().y} + 2*(${puntos.map(p => p.y).slice(1, puntos.length - 1).join(' + ')}) + ${getMax().y})`)\r\n      }\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let newH = (maxPoint - minPoint) / n\r\n    setH(newH)\r\n  }, [maxPoint, minPoint, n])\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let newPuntos = []\r\n      let lastX = minPoint;\r\n\r\n      newPuntos.push({\r\n        x: minPoint,\r\n        y: evaluate(equacion.replaceAll('x', `(${minPoint})`))\r\n      })\r\n\r\n      while (newPuntos.length !== n + 1) {\r\n        newPuntos.push({\r\n          x: lastX + h,\r\n          y: evaluate(equacion.replaceAll('x', `(${lastX + h})`))\r\n        })\r\n        lastX += h;\r\n      }\r\n\r\n      setPuntos(newPuntos)\r\n\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }, [equacion, h])\r\n\r\n  useEffect(() => {\r\n    setRes(\r\n      {\r\n        simple: evaluate(`((${getMax().x} - ${getMin().x})*(${getMin().y}+${getMax().y}))/2`),\r\n        compuesto: evaluate(`(${h}/2)*(${getMin().y} + 2*(${puntos.map(p => p.y).slice(1, puntos.length - 1).join(' + ')}) + ${getMax().y})`)\r\n      }\r\n    )\r\n  }, [puntos]);\r\n\r\n\r\n\r\n  function getMin() {\r\n    return {x: d3.min(puntos, p => p.x), y: d3.min(puntos, p => p.y)}\r\n  }\r\n\r\n  function getMax() {\r\n    return {x: d3.max(puntos, p => p.x), y: d3.max(puntos, p => p.y)}\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid divided columns={'2'}>\r\n        <Grid.Row>\r\n          <Grid.Column width={'16'}>\r\n            <Segment fluid>\r\n              <Input\r\n                label={'Equation: f(x):'}\r\n                placeholder={'f(x)'}\r\n                value={equacion}\r\n                onChange={(e, {value}) => setEquacion(value)}\r\n              />\r\n              <Input\r\n                type='range'\r\n                min={'1'}\r\n                max={'15'}\r\n                label={`n: ${n}`}\r\n                placeholder={'n subdivisones'}\r\n                value={n}\r\n                onChange={(e, {value}) => setN(Number(value))}\r\n              />\r\n              <Input\r\n                label={'Minimo'}\r\n                placeholder={'X Minimo'}\r\n                value={minPoint}\r\n                onChange={(e, {value}) => setMinPoint(value)}\r\n              />\r\n              <Input\r\n                label={'Maximo'}\r\n                placeholder={'X Maximo'}\r\n                value={maxPoint}\r\n                onChange={(e, {value}) => setMaxPoint(value)}\r\n              />\r\n              <Label>\r\n                h: (b-a)/n : {getMax().x - getMin().x}/{n} : {(getMax().x - getMin().x) / n}\r\n              </Label>\r\n              <Table celled>\r\n                <Table.Header>\r\n                  <Table.HeaderCell>\r\n                    x\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>\r\n                    y\r\n                  </Table.HeaderCell>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                  {puntos.map(p =>\r\n                    <Table.Row>\r\n                      <Table.Cell>\r\n                        {p.x}\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        {p.y}\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  )}\r\n                </Table.Body>\r\n              </Table>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n\r\n            <Segment>\r\n              <Header>\r\n                Metodo de Trapecios Simple:\r\n              </Header>\r\n              <MathComponent tex={'\\\\frac{((b-a)*(f(a)+f(b)))}{2}'}/>\r\n              <MathComponent tex={`\\\\frac{((${getMax().x} - ${getMin().x})*(${getMin().y}+${getMax().y}))}{2} =`}/>\r\n              <Header textAlign=\"center\" as={'h4'}>\r\n                {res.simple}\r\n              </Header>\r\n            </Segment>\r\n\r\n            }\r\n\r\n\r\n          </Grid.Column>\r\n\r\n          <Grid.Column>\r\n\r\n            <Segment>\r\n              <Header>\r\n                Metodo de trapecios Compuestos\r\n              </Header>\r\n              <MathComponent tex={`\\\\Sigma_{i=1}^${n} (\\\\frac{h}{2}*(y_{i-1} + y_i))=`}/>\r\n              {\r\n                <MathComponent tex={\r\n                  `\\\\frac{${h}}{2} * (${getMin().y} + 2*(${puntos.map(p => p.y).slice(1, puntos.length - 1).join(' + ')}) + ${getMax().y})`\r\n                }/>\r\n              }\r\n              <Header textAlign=\"center\" as={'h4'}>\r\n                {res.compuesto}\r\n              </Header>\r\n            </Segment>\r\n\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetodosTrapecios;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Input, Segment, Table} from \"semantic-ui-react\";\r\n\r\nfunction Gauss() {\r\n\r\n  const [initMat, setInitMat] = useState([\r\n    [-2, 0, -2, -10],\r\n    [2, 2, 4, 16],\r\n    [0, 1, 0, 0]\r\n  ]);\r\n  const [nMat, setNMat] = useState(3);\r\n  const [resMat, setResMat] = useState([]);\r\n  const [resulatdos,setResulatdos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let newMat = [];\r\n      for (let i = 0; nMat > i; i++) {\r\n        let matAdd = [];\r\n        for (let j = 0; nMat > j; j++) {\r\n          matAdd.push('')\r\n        }\r\n        matAdd.push('')\r\n        newMat.push(matAdd)\r\n      }\r\n      setInitMat(newMat);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, [nMat]);\r\n\r\n  return (\r\n    <Segment>\r\n\r\n      <Input\r\n        label={`Tamaño: ${nMat}*${nMat}`}\r\n        value={nMat}\r\n        min={'2'}\r\n        max={'5'}\r\n        type={'range'}\r\n        onChange={(e, {value}) => setNMat(Number(value))}\r\n      />\r\n\r\n      <Table celled>\r\n        <Table.Header>\r\n          {initMat.map( (val, index) =>\r\n            <Table.HeaderCell>\r\n              Columna: {index}\r\n            </Table.HeaderCell>\r\n          )}\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n\r\n          {initMat.map( (val, i1) =>\r\n            <Table.Row>\r\n              {val.map((val2, i2) => {\r\n                return (\r\n                  <Table.Cell>\r\n                    <Input\r\n                      value={initMat[i1][i2]}\r\n                      placeholder={i2 !== nMat ? `(${i1},${i2})`: `b${i1}`}\r\n                      onChange={(e, {value}) => {\r\n                        let newMat = JSON.parse(JSON.stringify(initMat));\r\n                        newMat[i1][i2] = value;\r\n                        setInitMat(newMat);\r\n                        setResMat([]);\r\n                        setResulatdos([]);\r\n                      }}\r\n                    />\r\n                  </Table.Cell>\r\n                )\r\n              })}\r\n            </Table.Row>\r\n          )}\r\n        </Table.Body>\r\n      </Table>\r\n\r\n      <Table celled>\r\n        <Table.Header>\r\n          {resMat.map( (val, index) =>\r\n            <Table.HeaderCell>\r\n              Columna: {index}\r\n            </Table.HeaderCell>\r\n          )}\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {resMat.map( (val, i1) =>\r\n            <Table.Row>\r\n              {val.map((val2, i2) => {\r\n                return (\r\n                  <Table.Cell>\r\n                    {val2}\r\n                  </Table.Cell>\r\n                )\r\n              })}\r\n            </Table.Row>\r\n          )}\r\n        </Table.Body>\r\n      </Table>\r\n\r\n      {resulatdos ?\r\n        <>\r\n          <Table>\r\n            <Table.Header>\r\n              {resulatdos.reverse().map((val, index) => <Table.HeaderCell>{`x${resulatdos.length - index} = ${val}`}</Table.HeaderCell>)}\r\n            </Table.Header>\r\n          </Table>\r\n        </>\r\n        :\r\n        <></>}\r\n\r\n      <Button\r\n        fluid\r\n        color={'green'}\r\n        content={'Elminacion de Gauss'}\r\n        onClick={() => {\r\n          try {\r\n            let rMat = gaussDecendente(initMat)\r\n            setResMat(rMat);\r\n            setResulatdos(getResultadoAscendente(rMat));\r\n          } catch (e) {\r\n            console.log(e)\r\n          }\r\n        }}\r\n      />\r\n\r\n    </Segment>\r\n  );\r\n}\r\n\r\nfunction gaussDecendente(matInit) {\r\n  let matrizDiagonal = JSON.parse(JSON.stringify(matInit));\r\n\r\n  let n = matrizDiagonal.length;\r\n  let i, j, k = 0;\r\n\r\n  for (i = 0; i < n; i++) {\r\n    for (j = i; j < n; j++) {\r\n      if (i !== j) {\r\n        let pivote = matrizDiagonal[j][i] / matrizDiagonal[i][i];\r\n        for (k = 0; k <= n; k++) {\r\n          matrizDiagonal[j][k] = matrizDiagonal[j][k] - (matrizDiagonal[i][k]) * pivote;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let row = 0; row < n ; row++){\r\n    let p = matrizDiagonal[row][row];\r\n    if (p !== 0) {\r\n      for (let col = 0; col <= n ; col++){\r\n        matrizDiagonal[row][col] = matrizDiagonal[row][col]/p\r\n      }\r\n    }\r\n  }\r\n\r\n  return matrizDiagonal;\r\n\r\n}\r\n\r\n\r\nfunction getResultadoAscendente(matInit) {\r\n  let matrizDiagonal = JSON.parse(JSON.stringify(matInit));\r\n  let n = matrizDiagonal.length;\r\n\r\n  let resultados = [];\r\n\r\n  for (let row=n-1;row>=0;row--) {\r\n    if (row+1 === n) {\r\n      resultados.push(matrizDiagonal[row][n])\r\n    } else {\r\n      resultados.push(matrizDiagonal[row][n] - resultados.map((r, index) => r * matrizDiagonal[row][n-index-1]).reduce((pV, cV) => pV + cV))\r\n    }\r\n  }\r\n  return resultados;\r\n}\r\n\r\nexport default Gauss;\r\n","import 'semantic-ui-css/semantic.min.css'\nimport {Route, Switch, HashRouter} from \"react-router-dom\";\nimport HomePage from \"./Pages/HomePage\";\nimport Navbar from \"./Components/Navbar\";\nimport EjerciciosA from \"./Pages/EjerciciosA\";\nimport Biseccion from \"./Pages/Biseccion\";\nimport PuntoFijo from \"./Pages/PuntoFijo\";\nimport NewtonRaphson from \"./Pages/NewtonRaphson\";\nimport PolinomioLagrange from \"./Pages/PolinomioLagrange\";\nimport MetodosTrapecios from \"./Pages/MetodosTrapecios\";\nimport MetodoRomberg from \"./Pages/MetodosRomberg\";\nimport Gauss from \"./Pages/Gauss\";\n\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <div>\n          <Navbar/>\n          <Route exact path={`/`} component={HomePage}/>\n          <Route path={`/ejercicios_a`} component={EjerciciosA}/>\n          <Route path={`/biseccion`} component={Biseccion}/>\n          <Route path={`/punto_fijo`} component={PuntoFijo}/>\n          <Route path={`/newton_raphson`} component={NewtonRaphson}/>\n          <Route path={`/polinomio_lagrange`} component={PolinomioLagrange}/>\n          <Route path={`/metodo_trapecios`} component={MetodosTrapecios}/>\n          <Route path={`/metodo_romberg`} component={MetodoRomberg}/>\n          <Route path={`/metodo_gauss`} component={Gauss}/>\n\n        </div>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}